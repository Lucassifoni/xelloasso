{
    "swagger": "2.0",
    "info": {
        "version": "V5",
        "title": "HelloAsso API",
        "description": "See https://api.helloasso.com/v5/swagger/ui/index",
        "x-swagger-net-version": "8.3.19.502"
    },
    "host": "api.helloasso.com",
    "basePath": "/v5",
    "schemes": [
        "https"
    ],
    "paths": {
        "/organizations/{organizationSlug}/checkout-intents/{checkoutIntentId}": {
            "get": {
                "tags": [
                    "Checkout intents management"
                ],
                "summary": "Retrieve a checkout intent, with the order if the payment has been authorized.",
                "description": "<br/><br/><b>Your clientId must be allowed all of those privileges : </b> <br/> Checkout<br/><br/>",
                "operationId": "OrganizationCheckoutIntents_GetCheckoutIntent",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "organizationSlug",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "checkoutIntentId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "You can override the JWT used fo authorization here. ie : Bearer JWT_TOKEN",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkout intent found",
                        "schema": {
                            "$ref": "#/definitions/HelloAsso.Api.V5.Models.Carts.CheckoutIntentResponse"
                        },
                        "examples": {
                            "application/json": {
                                "metadata": {
                                    "payment_ref": 150,
                                    "contributor_id": "1541"
                                },
                                "order": {
                                    "payer": {
                                        "email": "john.doe@test.com",
                                        "address": "23 rue du palmier",
                                        "city": "Paris",
                                        "zipCode": "75000",
                                        "country": "FRA",
                                        "company": "Hello Asso",
                                        "dateOfBirth": "1986-07-06T00:00:00+02:00",
                                        "firstName": "John",
                                        "lastName": "Doe"
                                    },
                                    "items": [
                                        {
                                            "payments": [
                                                {
                                                    "id": 159875,
                                                    "shareAmount": 10000
                                                },
                                                {
                                                    "id": 159876,
                                                    "shareAmount": 10000
                                                },
                                                {
                                                    "id": 159877,
                                                    "shareAmount": 10000
                                                }
                                            ],
                                            "name": "Adhesion Football",
                                            "user": {
                                                "firstName": "John",
                                                "lastName": "Doe"
                                            },
                                            "priceCategory": "Fixed",
                                            "discount": {
                                                "code": "UNLOCK1 : -5â‚¬",
                                                "amount": 3000
                                            },
                                            "options": [
                                                {
                                                    "name": "Casquette",
                                                    "amount": 300,
                                                    "priceCategory": "Fixed",
                                                    "isRequired": true,
                                                    "customFields": [
                                                        {
                                                            "id": 0,
                                                            "name": "Couleur",
                                                            "type": "ChoiceList",
                                                            "answer": "Rouge"
                                                        }
                                                    ],
                                                    "optionId": 12580
                                                },
                                                {
                                                    "name": "T-Shirt",
                                                    "amount": 700,
                                                    "priceCategory": "Fixed",
                                                    "isRequired": true,
                                                    "customFields": [
                                                        {
                                                            "id": 0,
                                                            "name": "Taille",
                                                            "type": "ChoiceList",
                                                            "answer": "M"
                                                        }
                                                    ],
                                                    "optionId": 12581
                                                }
                                            ],
                                            "ticketUrl": "https://www.helloasso.com/associations/association-exemple/evenements/formulaire-exemple/ticket?ticketId=12578&ag=12578",
                                            "qrCode": "MTI1Nzg6NjM3MTIwMjQwMjIwMDAwMDAw",
                                            "tierDescription": "tierDescription",
                                            "tierId": 168965,
                                            "comment": "comment1",
                                            "id": 12578,
                                            "amount": 30000,
                                            "type": "Membership",
                                            "initialAmount": 30000,
                                            "state": "Processed"
                                        },
                                        {
                                            "payments": [
                                                {
                                                    "id": 159875,
                                                    "shareAmount": 1000
                                                }
                                            ],
                                            "user": {
                                                "firstName": "John",
                                                "lastName": "Doe"
                                            },
                                            "priceCategory": "Fixed",
                                            "qrCode": "MTI1Nzk6NjM3MTIwMjQwMjIwMDAwMDAw",
                                            "tierDescription": "tierDescription",
                                            "comment": "comment2",
                                            "id": 12579,
                                            "amount": 1000,
                                            "type": "Donation",
                                            "initialAmount": 1000,
                                            "state": "Processed"
                                        }
                                    ],
                                    "payments": [
                                        {
                                            "items": [
                                                {
                                                    "id": 12578,
                                                    "shareAmount": 11000,
                                                    "shareItemAmount": 10000,
                                                    "shareOptionsAmount": 1000
                                                },
                                                {
                                                    "id": 12579,
                                                    "shareAmount": 1000,
                                                    "shareItemAmount": 1000
                                                }
                                            ],
                                            "cashOutDate": "2020-02-15T17:27:02+01:00",
                                            "cashOutState": "CashedOut",
                                            "paymentReceiptUrl": "https://www.helloasso.com/associations/association-exemple/evenements/formulaire-exemple/paiement-attestation/12578",
                                            "fiscalReceiptUrl": "https://www.helloasso.com/get-fisc.aspx?dau=159875",
                                            "id": 159875,
                                            "amount": 11000,
                                            "date": "2019-12-15T17:27:02+01:00",
                                            "paymentMeans": "Card",
                                            "installmentNumber": 1,
                                            "state": "Authorized",
                                            "meta": {
                                                "createdAt": "2019-12-15T17:27:02+01:00",
                                                "updatedAt": "2019-12-15T17:27:02+01:00"
                                            }
                                        },
                                        {
                                            "items": [
                                                {
                                                    "id": 12578,
                                                    "shareAmount": 10000,
                                                    "shareItemAmount": 10000,
                                                    "shareOptionsAmount": 0
                                                }
                                            ],
                                            "cashOutState": "Transfered",
                                            "paymentReceiptUrl": "https://www.helloasso.com/associations/association-exemple/evenements/formulaire-exemple/paiement-attestation/12578",
                                            "fiscalReceiptUrl": "https://www.helloasso.com/get-fisc.aspx?dau=159876",
                                            "id": 159876,
                                            "amount": 9000,
                                            "date": "2020-01-15T17:27:02+01:00",
                                            "paymentMeans": "Card",
                                            "installmentNumber": 1,
                                            "state": "Authorized",
                                            "meta": {
                                                "createdAt": "2020-01-15T17:27:02+01:00",
                                                "updatedAt": "2020-01-15T17:27:02+01:00"
                                            }
                                        },
                                        {
                                            "items": [
                                                {
                                                    "id": 12578,
                                                    "shareAmount": 10000,
                                                    "shareItemAmount": 10000,
                                                    "shareOptionsAmount": 0
                                                }
                                            ],
                                            "id": 159877,
                                            "amount": 9000,
                                            "date": "2020-02-15T17:27:02+01:00",
                                            "paymentMeans": "Card",
                                            "installmentNumber": 1,
                                            "state": "Pending",
                                            "meta": {
                                                "createdAt": "2020-02-15T17:27:02+01:00",
                                                "updatedAt": "2020-02-15T17:27:02+01:00"
                                            },
                                            "refundOperations": [
                                                {
                                                    "id": 1,
                                                    "amount": 2000,
                                                    "amountTip": 200,
                                                    "status": "Processed",
                                                    "meta": {
                                                        "createdAt": "2024-07-22T15:22:56.9742394+02:00",
                                                        "updatedAt": "2024-07-23T15:22:56.9742394+02:00"
                                                    }
                                                }
                                            ]
                                        }
                                    ],
                                    "amount": {
                                        "total": 10000,
                                        "vat": 0,
                                        "discount": 3000
                                    },
                                    "id": 12578,
                                    "date": "2019-12-15T17:27:02+01:00",
                                    "formSlug": "formulaire-exemple",
                                    "formType": "Event",
                                    "organizationName": "name",
                                    "organizationSlug": "association-exemple",
                                    "organizationType": "Association1901Rig",
                                    "organizationIsUnderColucheLaw": false,
                                    "meta": {
                                        "createdAt": "2019-12-15T17:27:02+01:00",
                                        "updatedAt": "2019-12-15T17:27:02+01:00"
                                    },
                                    "isAnonymous": false,
                                    "isAmountHidden": false
                                },
                                "id": 123,
                                "redirectUrl": "https://www.helloasso.com/associations/association-exemple/checkout/278fd1c7a2d642608ee8d7d4f35da72b"
                            }
                        }
                    },
                    "403": {
                        "description": "The JWT token hasn't the privileges or Roles for this action"
                    },
                    "401": {
                        "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
                    }
                },
                "security": [
                    {
                        "User": []
                    },
                    {
                        "Client": []
                    }
                ]
            }
        },
        "/organizations/{organizationSlug}/checkout-intents": {
            "post": {
                "tags": [
                    "Checkout intents management"
                ],
                "summary": "Init a checkout.",
                "description": "<br/><br/><b>Your clientId must be allowed all of those privileges : </b> <br/> Checkout<br/><br/>",
                "operationId": "OrganizationCheckoutIntents_PostInitCheckout",
                "consumes": [
                    "application/json",
                    "text/json"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "organizationSlug",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HelloAsso.Api.V5.Models.Carts.InitCheckoutBody"
                        }
                    },
                    {
                        "name": "cancellationToken",
                        "in": "header",
                        "required": true
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "You can override the JWT used fo authorization here. ie : Bearer JWT_TOKEN",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkout intent initiated successfully",
                        "schema": {
                            "$ref": "#/definitions/HelloAsso.Api.V5.Models.Carts.InitCheckoutResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 123,
                                "redirectUrl": "https://www.helloasso.com/associations/association-exemple/checkout/264b4f0f49b44a88adb5e2ea1094c634"
                            }
                        }
                    },
                    "403": {
                        "description": "The JWT token hasn't the privileges or Roles for this action"
                    },
                    "401": {
                        "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
                    }
                },
                "security": [
                    {
                        "User": []
                    },
                    {
                        "Client": []
                    }
                ]
            }
        },
        "/directory/forms": {
            "post": {
                "tags": [
                    "Directory"
                ],
                "summary": "Get all forms by form filters and organization filters",
                "description": "Allows you to retrieve a list of all forms visible (only) matching all the filters in the directory until it is synchronized (using the continuationToken).\r\nIf filters are left empty, no filter is applied.\r\nResults are ordered by Api visibility update date ascending.\r\nOnce the list is synchronized, only forms with an Api visibility update date greater than the last form sent are returned (still using the continuationToken).\r\nThis concerns the new forms to be inserted (wishing to appear in the directory) as well as the old ones to be deleted (no longer wishing to appear in the directory).\r\nThe total number of results (or pages) isn't retrievable, so the pagination information returned will always say -1.<br/><br/><b>Your clientId must be allowed all of those privileges : </b> <br/> FormOpenDirectory<br/><br/>",
                "operationId": "Directory_PostFormsListRequest",
                "consumes": [
                    "application/json",
                    "text/json"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body which contains the filters to apply",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HelloAsso.Api.V5.Models.Directory.ListFormsRequest"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 20
                    },
                    {
                        "name": "continuationToken",
                        "in": "query",
                        "description": "Continuation Token from which we wish to retrieve results",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "You can override the JWT used fo authorization here. ie : Bearer JWT_TOKEN",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Form List",
                        "schema": {
                            "$ref": "#/definitions/HelloAsso.Api.V5.Models.Common.ResultsWithPaginationModelOfHelloAsso.Api.V5.Models.Directory.SynchronizableFormModel"
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "action": "Insert",
                                    "record": {
                                        "financialGoal": 200000,
                                        "financialGoalPercentageReached": 50,
                                        "maxPrice": 6000,
                                        "minPrice": 1000,
                                        "organizationPlace": {
                                            "address": "organizationAddress",
                                            "city": "organizationCity",
                                            "zipCode": "organizationZipCode",
                                            "country": "FRA",
                                            "geoLocation": {
                                                "latitude": 50.0,
                                                "longitude": 100.0
                                            }
                                        },
                                        "remainingEntries": 10,
                                        "organizationLogo": "https://cdn.helloasso.com/img/logos/organizationLogo",
                                        "organizationName": "organizationName",
                                        "activityType": "Cours",
                                        "activityTypeId": 4,
                                        "place": {
                                            "address": "CafÃ© du thÃ©atre",
                                            "name": "Theatre de la place",
                                            "city": "Dax",
                                            "zipCode": "40180",
                                            "country": "FRA",
                                            "geoLocation": {
                                                "latitude": 45.0,
                                                "longitude": 66.0
                                            }
                                        },
                                        "banner": {
                                            "fileName": "banner.jpg",
                                            "publicUrl": "https://cdn.helloasso.com/img/photos/evenements/banner.jpg"
                                        },
                                        "currency": "EUR",
                                        "description": "Description de mon Ã©vÃ©nement",
                                        "startDate": "2024-07-24T15:22:57.0382237+02:00",
                                        "endDate": "2024-07-24T15:22:57.0382237+02:00",
                                        "meta": {
                                            "createdAt": "2024-07-24T15:22:57.0382237+02:00",
                                            "updatedAt": "2024-07-24T15:22:57.0382237+02:00"
                                        },
                                        "state": "Public",
                                        "title": "Nom de mon Ã©vÃ©nement",
                                        "widgetButtonUrl": "https://www.helloasso.com/associations/organizationSlug/evenements/formulaire-exemple/widget-bouton",
                                        "widgetFullUrl": "https://www.helloasso.com/associations/organizationSlug/evenements/formulaire-exemple/widget",
                                        "widgetVignetteHorizontalUrl": "https://www.helloasso.com/associations/organizationSlug/evenements/formulaire-exemple/widget-vignette-horizontale",
                                        "widgetVignetteVerticalUrl": "https://www.helloasso.com/associations/organizationSlug/evenements/formulaire-exemple/widget-vignette",
                                        "formSlug": "formulaire-exemple",
                                        "formType": "Event",
                                        "url": "https://www.helloasso.com/associations/organizationSlug/evenements/formulaire-exemple?utm_source=partenaire&utm_medium=referral&utm_campaign=API&utm_content=campagne",
                                        "organizationSlug": "organizationSlug"
                                    }
                                },
                                {
                                    "action": "Delete",
                                    "record": {
                                        "formSlug": "formulaire-exemple",
                                        "formType": "Event",
                                        "url": "https://www.helloasso.com/associations/organizationSlug/evenements/formulaire-exemple?utm_source=partenaire&utm_medium=referral&utm_campaign=API&utm_content=campagne",
                                        "organizationSlug": "organizationSlug"
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "The JWT token hasn't the privileges or Roles for this action"
                    },
                    "401": {
                        "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
                    }
                },
                "security": [
                    {
                        "User": []
                    },
                    {
                        "Client": []
                    }
                ]
            }
        },
        "/directory/organizations": {
            "post": {
                "tags": [
                    "Directory"
                ],
                "summary": "Get all organization by organization filters",
                "description": "Allows you to retrieve a list of all organizations visible (only) matching all the filters in the directory until it is synchronized (using the continuationToken).\r\nIf filters are left empty, no filter is applied.\r\nResults are ordered by Api visibility update date ascending.\r\nOnce the list is synchronized, only organizations with an Api visibility update date greater than the last organization sent are returned (still using the continuationToken).\r\nThis concerns the new organizations to be inserted (wishing to appear in the directory) as well as the old ones to be deleted (no longer wishing to appear in the directory).\r\nThe total number of results (or pages) isn't retrievable, so the pagination information returned will always say -1.<br/><br/><b>Your clientId must be allowed all of those privileges : </b> <br/> OrganizationOpenDirectory<br/><br/>",
                "operationId": "Directory_PostOrganizationsListRequest",
                "consumes": [
                    "application/json",
                    "text/json"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body which contains the filters to apply",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HelloAsso.Api.V5.Models.Directory.ListOrganizationsRequest"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 20
                    },
                    {
                        "name": "continuationToken",
                        "in": "query",
                        "description": "Continuation Token from which we wish to retrieve results",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "You can override the JWT used fo authorization here. ie : Bearer JWT_TOKEN",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Organization List",
                        "schema": {
                            "$ref": "#/definitions/HelloAsso.Api.V5.Models.Common.ResultsWithPaginationModelOfHelloAsso.Api.V5.Models.Directory.SynchronizableOrganizationModel"
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "action": "Insert",
                                    "record": {
                                        "linkedPartners": [
                                            "FFBB"
                                        ],
                                        "banner": "https://cdn.helloasso.com/img/photos/organizationBanner",
                                        "fiscalReceiptEligibility": false,
                                        "fiscalReceiptIssuanceEnabled": true,
                                        "type": "Association1901",
                                        "category": "organizationCategoryLabel",
                                        "rnaNumber": "X123456789",
                                        "logo": "https://cdn.helloasso.com/img/logos/organizationLogo",
                                        "name": "organizationName",
                                        "city": "organizationCity",
                                        "zipCode": "organizationZipCode",
                                        "description": "organizationDescription",
                                        "updateDate": "2024-07-24T15:22:57.0527615+02:00",
                                        "url": "https://www.helloasso.com/associations/organizationSlug?utm_source=partenaire&utm_medium=referral&utm_campaign=API&utm_content=association",
                                        "organizationSlug": "organizationSlug"
                                    }
                                },
                                {
                                    "action": "Delete",
                                    "record": {
                                        "url": "https://www.helloasso.com/associations/organizationSlug?utm_source=partenaire&utm_medium=referral&utm_campaign=API&utm_content=association",
                                        "organizationSlug": "organizationSlug"
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "The JWT token hasn't the privileges or Roles for this action"
                    },
                    "401": {
                        "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
                    }
                },
                "security": [
                    {
                        "User": []
                    },
                    {
                        "Client": []
                    }
                ]
            }
        },
        "/organizations/{organizationSlug}/forms/{formType}/action/quick-create": {
            "post": {
                "tags": [
                    "Forms"
                ],
                "summary": "Create a simplified event for an Organism",
                "description": "This is a limited service to create an event with only limited information and few simple pricing.\r\nEvent created this way can be further edited with other services<br/><br/><b>Your token must have one of these roles : </b><br/>OrganizationAdmin<br/><br/>If you are an <b>association</b>, you can obtain these roles with your client.<br/>If you are a <b>partner</b>, you can obtain these roles by the authorize flow.<br/><br/><b>Your clientId must be allowed all of those privileges : </b> <br/> FormAdministration<br/><br/>",
                "operationId": "FormAdministration_PostQuickCreateEvent",
                "consumes": [
                    "application/json",
                    "text/json"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "organizationSlug",
                        "in": "path",
                        "description": "The organization Slug",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "formType",
                        "in": "path",
                        "description": "The form type to create - only Event type is supported",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "CrowdFunding",
                            "Membership",
                            "Event",
                            "Donation",
                            "PaymentForm",
                            "Checkout",
                            "Shop"
                        ]
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The body of the request.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HelloAsso.Api.V5.Models.Forms.FormQuickCreateRequest"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "You can override the JWT used fo authorization here. ie : Bearer JWT_TOKEN",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event Successfully created",
                        "schema": {
                            "$ref": "#/definitions/HelloAsso.Api.V5.Models.Forms.FormQuickCreateModel"
                        }
                    },
                    "403": {
                        "description": "The JWT token hasn't the privileges or Roles for this action"
                    },
                    "401": {
                        "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
                    }
                },
                "security": [
                    {
                        "User": []
                    },
                    {
                        "Client": []
                    }
                ]
            }
        },
        "/organizations/{organizationSlug}/forms/{formType}/{formSlug}/public": {
            "get": {
                "tags": [
                    "Forms"
                ],
                "summary": "Get detailed public data about a specific form",
                "description": "This api allows you to retrieve all public information of a form whether it is Crowdfunding, Membership, Event, Donation...<br/><br/><b>Your clientId must be allowed all of those privileges : </b> <br/> AccessPublicData<br/><br/>",
                "operationId": "PublicForms_GetFormPublic",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "organizationSlug",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "formType",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "CrowdFunding",
                            "Membership",
                            "Event",
                            "Donation",
                            "PaymentForm",
                            "Checkout",
                            "Shop"
                        ]
                    },
                    {
                        "name": "formSlug",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "You can override the JWT used fo authorization here. ie : Bearer JWT_TOKEN",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get a Form",
                        "schema": {
                            "$ref": "#/definitions/HelloAsso.Api.V5.Models.Forms.FormPublicModel"
                        },
                        "examples": {
                            "application/json": {
                                "organizationLogo": "https://cdn.helloasso.com/img/logos/association logo example.jpg",
                                "organizationName": "Association Exemple",
                                "tiers": [
                                    {
                                        "id": 1,
                                        "label": "mon tarif 1",
                                        "description": "description 1",
                                        "tierType": "Registration",
                                        "price": 1000,
                                        "vatRate": 0.0,
                                        "paymentFrequency": "Single",
                                        "maxPerUser": 5,
                                        "isEligibleTaxReceipt": true
                                    },
                                    {
                                        "id": 2,
                                        "label": "mon tarif 2",
                                        "description": "description 2",
                                        "tierType": "Registration",
                                        "price": 1000,
                                        "vatRate": 0.0,
                                        "paymentFrequency": "Single",
                                        "maxPerUser": 5,
                                        "isEligibleTaxReceipt": true
                                    },
                                    {
                                        "id": 3,
                                        "label": "mon tarif 3",
                                        "description": "description 3",
                                        "tierType": "Registration",
                                        "price": 1000,
                                        "vatRate": 0.0,
                                        "paymentFrequency": "Single",
                                        "maxPerUser": 5,
                                        "isEligibleTaxReceipt": true
                                    },
                                    {
                                        "id": 4,
                                        "label": "mon tarif 4",
                                        "description": "description 4",
                                        "tierType": "Registration",
                                        "price": 1000,
                                        "vatRate": 0.0,
                                        "paymentFrequency": "Single",
                                        "maxPerUser": 5,
                                        "isEligibleTaxReceipt": true
                                    },
                                    {
                                        "id": 5,
                                        "label": "mon tarif 5",
                                        "description": "description 5",
                                        "tierType": "Registration",
                                        "price": 1000,
                                        "vatRate": 0.0,
                                        "paymentFrequency": "Single",
                                        "maxPerUser": 5,
                                        "isEligibleTaxReceipt": true
                                    }
                                ],
                                "activityType": "ActivityType",
                                "activityTypeId": 12,
                                "place": {
                                    "address": "23 rue du palmier",
                                    "name": "CafÃ© du thÃ©atre",
                                    "city": "Paris",
                                    "zipCode": "75000",
                                    "country": "FRA",
                                    "geoLocation": {
                                        "latitude": 22.56,
                                        "longitude": 44.87
                                    }
                                },
                                "saleEndDate": "2024-07-26T15:22:57.1015122+02:00",
                                "saleStartDate": "2024-07-22T15:22:57.1015122+02:00",
                                "personalizedMessage": "Merci pour votre participation !",
                                "banner": {
                                    "fileName": "thumbnail 1",
                                    "publicUrl": "https://cdn.helloasso.com/img/photos/evenements/thumbnail 1"
                                },
                                "currency": "EUR",
                                "description": "Description de mon Ã©vÃ©nement",
                                "startDate": "2024-07-24T15:15:57.1181439+02:00",
                                "endDate": "2024-07-31T15:22:57.1015122+02:00",
                                "logo": {
                                    "fileName": "image 1",
                                    "publicUrl": "https://cdn.helloasso.com/img/photos/evenements/image 1"
                                },
                                "meta": {
                                    "createdAt": "2024-07-24T15:07:57.1015122+02:00",
                                    "updatedAt": "2024-07-24T15:07:57.1181439+02:00"
                                },
                                "state": "Public",
                                "title": "Nom de mon Ã©vÃ©nement",
                                "widgetButtonUrl": "https://www.helloasso.com/associations/association-exemple/evenements/formulaire-exemple/widget-bouton",
                                "widgetFullUrl": "https://www.helloasso.com/associations/association-exemple/evenements/formulaire-exemple/widget",
                                "widgetVignetteHorizontalUrl": "https://www.helloasso.com/associations/association-exemple/evenements/formulaire-exemple/widget-vignette-horizontale",
                                "widgetVignetteVerticalUrl": "https://www.helloasso.com/associations/association-exemple/evenements/formulaire-exemple/widget-vignette",
                                "formSlug": "formulaire-exemple",
                                "formType": "Event",
                                "url": "https://www.helloasso.com/associations/association-exemple/evenements/formulaire-exemple",
                                "organizationSlug": "association-exemple"
                            }
                        }
                    },
                    "403": {
                        "description": "The JWT token hasn't the privileges or Roles for this action"
                    },
                    "401": {
                        "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
                    }
                },
                "security": [
                    {
                        "User": []
                    },
                    {
                        "Client": []
                    }
                ]
            }
        },
        "/organizations/{organizationSlug}/formTypes": {
            "get": {
                "tags": [
                    "Forms"
                ],
                "summary": "Get a list of formTypes for an organization",
                "description": "List all the formTypes where the organization has at least one form. This also can be filtered by states.<br/><br/><b>Your clientId must be allowed all of those privileges : </b> <br/> AccessPublicData<br/><br/>",
                "operationId": "PublicForms_GetFormTypesList",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "organizationSlug",
                        "in": "path",
                        "description": "The organization Slug",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "states",
                        "in": "query",
                        "description": "List of Form States to filter with. If none specified, it won't filter results.",
                        "required": false,
                        "items": {},
                        "collectionFormat": "multi",
                        "type": "array"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "You can override the JWT used fo authorization here. ie : Bearer JWT_TOKEN",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get form types created by the organization",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.FormType"
                            },
                            "xml": {
                                "name": "FormType",
                                "wrapped": true
                            },
                            "type": "array"
                        },
                        "examples": {
                            "application/json": [
                                "Donation",
                                "Event"
                            ]
                        }
                    },
                    "403": {
                        "description": "The JWT token hasn't the privileges or Roles for this action"
                    },
                    "401": {
                        "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
                    }
                },
                "security": [
                    {
                        "User": []
                    },
                    {
                        "Client": []
                    }
                ]
            }
        },
        "/organizations/{organizationSlug}/forms": {
            "get": {
                "tags": [
                    "Forms"
                ],
                "summary": "Get the forms of a specific organization",
                "description": "List all forms matching the filtered states and types.\r\nIf filters are left empty, no filter is applied.\r\nResults are ordered by creation date descending.<br/><br/><b>Your clientId must be allowed all of those privileges : </b> <br/> AccessPublicData<br/><br/>",
                "operationId": "PublicForms_GetFormListByOrganization",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "organizationSlug",
                        "in": "path",
                        "description": "The organization Slug",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "states",
                        "in": "query",
                        "description": "States to filter",
                        "required": false,
                        "items": {},
                        "collectionFormat": "multi",
                        "type": "array"
                    },
                    {
                        "name": "formTypes",
                        "in": "query",
                        "description": "Types to filter",
                        "required": false,
                        "items": {},
                        "collectionFormat": "multi",
                        "type": "array"
                    },
                    {
                        "name": "pageIndex",
                        "in": "query",
                        "description": "The page of results to retrieve",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 1
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 20
                    },
                    {
                        "name": "continuationToken",
                        "in": "query",
                        "description": "Continuation Token from which we wish to retrieve results",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "You can override the JWT used fo authorization here. ie : Bearer JWT_TOKEN",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Form List",
                        "schema": {
                            "$ref": "#/definitions/HelloAsso.Api.V5.Models.Common.ResultsWithPaginationModelOfHelloAsso.Api.V5.Models.Forms.FormLightModel"
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "banner": {
                                        "fileName": "banner.jpg",
                                        "publicUrl": "https://cdn.helloasso.com/img/photos/evenements/banner.jpg"
                                    },
                                    "currency": "EUR",
                                    "description": "Description de mon Ã©vÃ©nement",
                                    "startDate": "2020-01-05T17:00:00+01:00",
                                    "endDate": "2020-01-05T22:30:00+01:00",
                                    "meta": {
                                        "createdAt": "2019-09-12T16:35:30+02:00",
                                        "updatedAt": "2024-07-24T15:07:57.1339678+02:00"
                                    },
                                    "state": "Public",
                                    "title": "Nom de mon Ã©vÃ©nement",
                                    "widgetButtonUrl": "https://www.helloasso.com/associations/association-exemple/evenements/formulaire-exemple/widget-bouton",
                                    "widgetFullUrl": "https://www.helloasso.com/associations/association-exemple/evenements/formulaire-exemple/widget",
                                    "widgetVignetteHorizontalUrl": "https://www.helloasso.com/associations/association-exemple/evenements/formulaire-exemple/widget-vignette-horizontale",
                                    "widgetVignetteVerticalUrl": "https://www.helloasso.com/associations/association-exemple/evenements/formulaire-exemple/widget-vignette",
                                    "formSlug": "formulaire-exemple",
                                    "formType": "Event",
                                    "url": "https://www.helloasso.com/associations/association-exemple/evenements/formulaire-exemple",
                                    "organizationSlug": "association-exemple"
                                },
                                {
                                    "banner": {
                                        "fileName": "banner.jpg",
                                        "publicUrl": "https://cdn.helloasso.com/img/photos/adhesions/banner.jpg"
                                    },
                                    "currency": "EUR",
                                    "description": "Description de mon formulaire d'adhÃ©sion",
                                    "startDate": "2018-12-31T23:00:00+01:00",
                                    "endDate": "2020-06-30T00:00:00+02:00",
                                    "meta": {
                                        "createdAt": "2019-09-12T16:35:30+02:00",
                                        "updatedAt": "2024-07-24T15:07:57.1339678+02:00"
                                    },
                                    "state": "Public",
                                    "title": "Nom de mon formulaire d'adhÃ©sion",
                                    "widgetButtonUrl": "https://www.helloasso.com/associations/association-exemple/adhesions/formulaire-exemple/widget-bouton",
                                    "widgetFullUrl": "https://www.helloasso.com/associations/association-exemple/adhesions/formulaire-exemple/widget",
                                    "widgetVignetteHorizontalUrl": "https://www.helloasso.com/associations/association-exemple/adhesions/formulaire-exemple/widget-vignette-horizontale",
                                    "widgetVignetteVerticalUrl": "https://www.helloasso.com/associations/association-exemple/adhesions/formulaire-exemple/widget-vignette",
                                    "formSlug": "formulaire-exemple",
                                    "formType": "Membership",
                                    "url": "https://www.helloasso.com/associations/association-exemple/adhesions/formulaire-exemple",
                                    "organizationSlug": "association-exemple"
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "The JWT token hasn't the privileges or Roles for this action"
                    },
                    "401": {
                        "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
                    }
                },
                "security": [
                    {
                        "User": []
                    },
                    {
                        "Client": []
                    }
                ]
            }
        },
        "/items/{itemId}": {
            "get": {
                "tags": [
                    "Orders - Items"
                ],
                "summary": "Get the detail of an item contained in an order",
                "description": "<br/><br/><b>Your token must have one of these roles : </b><br/>FormAdmin<br/>OrganizationAdmin<br/><br/>If you are an <b>association</b>, you can obtain these roles with your client.<br/>If you are a <b>partner</b>, you can obtain these roles by the authorize flow.<br/><br/><b>Your clientId must be allowed all of those privileges : </b> <br/> AccessTransactions<br/><br/>",
                "operationId": "Orders_GetItem",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "The item ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "withDetails",
                        "in": "query",
                        "description": "Set to true to return CustomFields and Options",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "You can override the JWT used fo authorization here. ie : Bearer JWT_TOKEN",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get order item",
                        "schema": {
                            "$ref": "#/definitions/HelloAsso.Api.V5.Models.Statistics.ItemDetail"
                        },
                        "examples": {
                            "application/json": {
                                "order": {
                                    "id": 12578,
                                    "date": "2019-12-15T17:27:02+01:00",
                                    "formSlug": "formulaire-exemple",
                                    "formType": "Event",
                                    "organizationName": "name",
                                    "organizationSlug": "association-exemple",
                                    "organizationType": "Association1901",
                                    "organizationIsUnderColucheLaw": false,
                                    "formName": "name",
                                    "meta": {
                                        "createdAt": "2019-12-15T17:27:02+01:00",
                                        "updatedAt": "2019-12-15T17:27:02+01:00"
                                    },
                                    "isAnonymous": false,
                                    "isAmountHidden": false
                                },
                                "payer": {
                                    "email": "john.doe@test.com",
                                    "address": "23 rue du palmier",
                                    "city": "Paris",
                                    "zipCode": "75000",
                                    "country": "FRA",
                                    "company": "Hello Asso",
                                    "dateOfBirth": "1986-07-06T00:00:00+02:00",
                                    "firstName": "John",
                                    "lastName": "Doe"
                                },
                                "payments": [
                                    {
                                        "cashOutState": "CashedOut",
                                        "shareAmount": 10000,
                                        "id": 159875,
                                        "amount": 11000,
                                        "date": "2019-12-15T17:27:02+01:00",
                                        "paymentMeans": "Card",
                                        "installmentNumber": 1,
                                        "state": "Authorized",
                                        "meta": {
                                            "createdAt": "2019-12-15T17:27:02+01:00",
                                            "updatedAt": "2019-12-15T17:27:02+01:00"
                                        }
                                    },
                                    {
                                        "cashOutState": "Transfered",
                                        "shareAmount": 30000,
                                        "id": 159876,
                                        "amount": 9000,
                                        "date": "2020-01-15T17:27:02+01:00",
                                        "paymentMeans": "Card",
                                        "installmentNumber": 2,
                                        "state": "Authorized",
                                        "meta": {
                                            "createdAt": "2020-01-15T17:27:02+01:00",
                                            "updatedAt": "2020-01-15T17:27:02+01:00"
                                        }
                                    },
                                    {
                                        "shareAmount": 30000,
                                        "id": 159877,
                                        "amount": 9000,
                                        "date": "2020-02-15T17:27:02+01:00",
                                        "paymentMeans": "Card",
                                        "installmentNumber": 3,
                                        "state": "Pending",
                                        "meta": {
                                            "createdAt": "2020-02-15T17:27:02+01:00",
                                            "updatedAt": "2020-02-15T17:27:02+01:00"
                                        },
                                        "refundOperations": [
                                            {
                                                "id": 1,
                                                "amount": 2000,
                                                "amountTip": 200,
                                                "status": "Processed",
                                                "meta": {
                                                    "createdAt": "2024-07-22T15:22:57.1479845+02:00",
                                                    "updatedAt": "2024-07-23T15:22:57.1479845+02:00"
                                                }
                                            }
                                        ]
                                    }
                                ],
                                "name": "Adhesion Football",
                                "user": {
                                    "firstName": "John",
                                    "lastName": "Doe"
                                },
                                "priceCategory": "Fixed",
                                "discount": {
                                    "code": "DISC30 : -30â‚¬",
                                    "amount": 3000
                                },
                                "customFields": [
                                    {
                                        "id": 0,
                                        "name": "BirthDate",
                                        "type": "Date",
                                        "answer": "1978-09-15"
                                    },
                                    {
                                        "id": 0,
                                        "name": "ZipCode",
                                        "type": "Zipcode",
                                        "answer": "33600"
                                    }
                                ],
                                "options": [
                                    {
                                        "name": "T-Shirt",
                                        "amount": 700,
                                        "priceCategory": "Fixed",
                                        "isRequired": false,
                                        "customFields": [
                                            {
                                                "id": 0,
                                                "name": "Couleur",
                                                "type": "ChoiceList",
                                                "answer": "Bleue"
                                            }
                                        ],
                                        "optionId": 12581
                                    },
                                    {
                                        "name": "Casquette",
                                        "amount": 300,
                                        "priceCategory": "Fixed",
                                        "isRequired": false,
                                        "optionId": 12580
                                    }
                                ],
                                "qrCode": "MTI1Nzg6NjM3MTIwMjQwMjIwMDAwMDAw",
                                "tierDescription": "tierDescription",
                                "tierId": 168965,
                                "comment": "comment",
                                "id": 12578,
                                "amount": 30000,
                                "type": "Membership",
                                "initialAmount": 30000,
                                "state": "Processed"
                            }
                        }
                    },
                    "403": {
                        "description": "The JWT token hasn't the privileges or Roles for this action"
                    },
                    "401": {
                        "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
                    }
                },
                "security": [
                    {
                        "User": []
                    },
                    {
                        "Client": []
                    }
                ]
            }
        },
        "/organizations/{organizationSlug}/forms/{formType}/{formSlug}/items": {
            "get": {
                "tags": [
                    "Orders - Items"
                ],
                "summary": "Get a list of items \"sold\" in a form",
                "description": "<br/><br/><b>Your token must have one of these roles : </b><br/>FormAdmin<br/>OrganizationAdmin<br/><br/>If you are an <b>association</b>, you can obtain these roles with your client.<br/>If you are a <b>partner</b>, you can obtain these roles by the authorize flow.<br/><br/><b>Your clientId must be allowed all of those privileges : </b> <br/> AccessTransactions<br/><br/>",
                "operationId": "Orders_GetFormItems",
                "consumes": [],
                "produces": [
                    "application/json",
                    "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                    "text/csv"
                ],
                "parameters": [
                    {
                        "name": "organizationSlug",
                        "in": "path",
                        "description": "The organization slug",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "formSlug",
                        "in": "path",
                        "description": "The form slug",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "formType",
                        "in": "path",
                        "description": "The form type CrowdFunding, Membership, Event, Donation, PaymentForm, Checkout, Shop",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "CrowdFunding",
                            "Membership",
                            "Event",
                            "Donation",
                            "PaymentForm",
                            "Checkout",
                            "Shop"
                        ]
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "First Date Filter",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "End Date Filter",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "userSearchKey",
                        "in": "query",
                        "description": "Filter results on user or payer first name, last name or email",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pageIndex",
                        "in": "query",
                        "description": "The page of results to retrieve",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 1
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 20
                    },
                    {
                        "name": "continuationToken",
                        "in": "query",
                        "description": "Continuation Token from which we wish to retrieve results",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tierTypes",
                        "in": "query",
                        "description": "The type of tiers",
                        "required": false,
                        "items": {},
                        "collectionFormat": "multi",
                        "type": "array"
                    },
                    {
                        "name": "itemStates",
                        "in": "query",
                        "description": "The item states",
                        "required": false,
                        "items": {},
                        "collectionFormat": "multi",
                        "type": "array"
                    },
                    {
                        "name": "tierName",
                        "in": "query",
                        "description": "The name of a tier",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "withDetails",
                        "in": "query",
                        "description": "Set to true to return CustomFields and Options",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "Sort forms items by ascending or descending order. Default is descending",
                        "required": false,
                        "type": "string",
                        "default": "Desc",
                        "enum": [
                            "Asc",
                            "Desc"
                        ]
                    },
                    {
                        "name": "sortField",
                        "in": "query",
                        "description": "Sort forms items by a specific field (Date or UpdateDate). Default is date",
                        "required": false,
                        "type": "string",
                        "default": "Date",
                        "enum": [
                            "Date",
                            "UpdateDate",
                            "CreationDate"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "You can override the JWT used fo authorization here. ie : Bearer JWT_TOKEN",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get form order items",
                        "schema": {
                            "$ref": "#/definitions/HelloAsso.Api.V5.Models.Common.ResultsWithPaginationModelOfHelloAsso.Api.V5.Models.Statistics.Item"
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "order": {
                                        "id": 12578,
                                        "date": "2019-12-15T17:27:02+01:00",
                                        "formSlug": "formulaire-exemple",
                                        "formType": "Event",
                                        "organizationName": "name",
                                        "organizationSlug": "association-exemple",
                                        "organizationType": "Association1901",
                                        "organizationIsUnderColucheLaw": false,
                                        "formName": "name",
                                        "meta": {
                                            "createdAt": "2019-12-15T17:27:02+01:00",
                                            "updatedAt": "2019-12-15T17:27:02+01:00"
                                        },
                                        "isAnonymous": false,
                                        "isAmountHidden": false
                                    },
                                    "payer": {
                                        "email": "john.doe@test.com",
                                        "address": "23 rue du palmier",
                                        "city": "Paris",
                                        "zipCode": "75000",
                                        "country": "FRA",
                                        "company": "Hello Asso",
                                        "dateOfBirth": "1986-07-06T00:00:00+02:00",
                                        "firstName": "John",
                                        "lastName": "Doe"
                                    },
                                    "payments": [
                                        {
                                            "cashOutState": "CashedOut",
                                            "shareAmount": 10000,
                                            "id": 159875,
                                            "amount": 11000,
                                            "date": "2019-12-15T17:27:02+01:00",
                                            "paymentMeans": "Card",
                                            "installmentNumber": 1,
                                            "state": "Authorized",
                                            "meta": {
                                                "createdAt": "2019-12-15T17:27:02+01:00",
                                                "updatedAt": "2019-12-15T17:27:02+01:00"
                                            }
                                        },
                                        {
                                            "cashOutState": "Transfered",
                                            "shareAmount": 30000,
                                            "id": 159876,
                                            "amount": 9000,
                                            "date": "2020-01-15T17:27:02+01:00",
                                            "paymentMeans": "Card",
                                            "installmentNumber": 2,
                                            "state": "Authorized",
                                            "meta": {
                                                "createdAt": "2020-01-15T17:27:02+01:00",
                                                "updatedAt": "2020-01-15T17:27:02+01:00"
                                            }
                                        },
                                        {
                                            "shareAmount": 30000,
                                            "id": 159877,
                                            "amount": 9000,
                                            "date": "2020-02-15T17:27:02+01:00",
                                            "paymentMeans": "Card",
                                            "installmentNumber": 3,
                                            "state": "Pending",
                                            "meta": {
                                                "createdAt": "2020-02-15T17:27:02+01:00",
                                                "updatedAt": "2020-02-15T17:27:02+01:00"
                                            },
                                            "refundOperations": [
                                                {
                                                    "id": 1,
                                                    "amount": 2000,
                                                    "amountTip": 200,
                                                    "status": "Processed",
                                                    "meta": {
                                                        "createdAt": "2024-07-22T15:22:57.1479845+02:00",
                                                        "updatedAt": "2024-07-23T15:22:57.1479845+02:00"
                                                    }
                                                }
                                            ]
                                        }
                                    ],
                                    "name": "Adhesion Football",
                                    "user": {
                                        "firstName": "John",
                                        "lastName": "Doe"
                                    },
                                    "priceCategory": "Fixed",
                                    "discount": {
                                        "code": "DISC30 : -30â‚¬",
                                        "amount": 3000
                                    },
                                    "customFields": [
                                        {
                                            "id": 0,
                                            "name": "BirthDate",
                                            "type": "Date",
                                            "answer": "1978-09-15"
                                        },
                                        {
                                            "id": 0,
                                            "name": "ZipCode",
                                            "type": "Zipcode",
                                            "answer": "33600"
                                        }
                                    ],
                                    "options": [
                                        {
                                            "name": "T-Shirt",
                                            "amount": 700,
                                            "priceCategory": "Fixed",
                                            "isRequired": false,
                                            "customFields": [
                                                {
                                                    "id": 0,
                                                    "name": "Couleur",
                                                    "type": "ChoiceList",
                                                    "answer": "Bleue"
                                                }
                                            ],
                                            "optionId": 12581
                                        },
                                        {
                                            "name": "Casquette",
                                            "amount": 300,
                                            "priceCategory": "Fixed",
                                            "isRequired": false,
                                            "optionId": 12580
                                        }
                                    ],
                                    "qrCode": "MTI1Nzg6NjM3MTIwMjQwMjIwMDAwMDAw",
                                    "tierDescription": "tierDescription",
                                    "tierId": 168965,
                                    "comment": "comment",
                                    "id": 12578,
                                    "amount": 30000,
                                    "type": "Membership",
                                    "initialAmount": 30000,
                                    "state": "Canceled"
                                },
                                {
                                    "order": {
                                        "id": 12578,
                                        "date": "2019-12-15T17:27:02+01:00",
                                        "formSlug": "formulaire-exemple",
                                        "formType": "Event",
                                        "organizationName": "name",
                                        "organizationSlug": "association-exemple",
                                        "organizationType": "Association1901",
                                        "organizationIsUnderColucheLaw": false,
                                        "formName": "name",
                                        "meta": {
                                            "createdAt": "2019-12-15T17:27:02+01:00",
                                            "updatedAt": "2019-12-15T17:27:02+01:00"
                                        },
                                        "isAnonymous": false,
                                        "isAmountHidden": false
                                    },
                                    "payer": {
                                        "email": "john.doe@test.com",
                                        "address": "23 rue du palmier",
                                        "city": "Paris",
                                        "zipCode": "75000",
                                        "country": "FRA",
                                        "company": "Hello Asso",
                                        "dateOfBirth": "1986-07-06T00:00:00+02:00",
                                        "firstName": "John",
                                        "lastName": "Doe"
                                    },
                                    "payments": [
                                        {
                                            "cashOutState": "Transfered",
                                            "shareAmount": 1000,
                                            "id": 159875,
                                            "amount": 11000,
                                            "date": "2019-12-15T17:27:02+01:00",
                                            "paymentMeans": "Card",
                                            "installmentNumber": 1,
                                            "state": "Authorized",
                                            "meta": {
                                                "createdAt": "2019-12-15T17:27:02+01:00",
                                                "updatedAt": "2019-12-15T17:27:02+01:00"
                                            }
                                        }
                                    ],
                                    "user": {
                                        "firstName": "John",
                                        "lastName": "Doe"
                                    },
                                    "priceCategory": "Fixed",
                                    "qrCode": "MTI1Nzk6NjM3MTIwMjQwMjIwMDAwMDAw",
                                    "tierDescription": "tierDescription",
                                    "comment": "comment",
                                    "id": 12579,
                                    "amount": 1000,
                                    "type": "Donation",
                                    "initialAmount": 1000,
                                    "state": "Processed"
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "The JWT token hasn't the privileges or Roles for this action"
                    },
                    "401": {
                        "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
                    }
                },
                "security": [
                    {
                        "User": []
                    },
                    {
                        "Client": []
                    }
                ]
            }
        },
        "/organizations/{organizationSlug}/items": {
            "get": {
                "tags": [
                    "Orders - Items"
                ],
                "summary": "Get a list of items sold by an organization",
                "description": "<br/><br/><b>Your token must have one of these roles : </b><br/>OrganizationAdmin<br/><br/>If you are an <b>association</b>, you can obtain these roles with your client.<br/>If you are a <b>partner</b>, you can obtain these roles by the authorize flow.<br/><br/><b>Your clientId must be allowed all of those privileges : </b> <br/> AccessTransactions<br/><br/>",
                "operationId": "Orders_GetOrganizationItems",
                "consumes": [],
                "produces": [
                    "application/json",
                    "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                    "text/csv"
                ],
                "parameters": [
                    {
                        "name": "organizationSlug",
                        "in": "path",
                        "description": "The organization slug",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "First Date Filter",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "End Date Filter",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "userSearchKey",
                        "in": "query",
                        "description": "Filter results on user or payer first name, last name or email",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pageIndex",
                        "in": "query",
                        "description": "The page of results to retrieve",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 1
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 20
                    },
                    {
                        "name": "continuationToken",
                        "in": "query",
                        "description": "Continuation Token from which we wish to retrieve results",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tierTypes",
                        "in": "query",
                        "description": "The type of tiers Donation, Payment, Registration, Membership, MonthlyDonation, MonthlyPayment, OfflineDonation, Contribution, Bonus",
                        "required": false,
                        "items": {},
                        "collectionFormat": "multi",
                        "type": "array"
                    },
                    {
                        "name": "itemStates",
                        "in": "query",
                        "description": "The item states",
                        "required": false,
                        "items": {},
                        "collectionFormat": "multi",
                        "type": "array"
                    },
                    {
                        "name": "tierName",
                        "in": "query",
                        "description": "The name of a tier",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "withDetails",
                        "in": "query",
                        "description": "Set to true to return CustomFields and Options",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "Sort organizations items by ascending or descending order. Default is descending",
                        "required": false,
                        "type": "string",
                        "default": "Desc",
                        "enum": [
                            "Asc",
                            "Desc"
                        ]
                    },
                    {
                        "name": "sortField",
                        "in": "query",
                        "description": "Sort organizations items by a specific field (Date or UpdateDate). Default is date",
                        "required": false,
                        "type": "string",
                        "default": "Date",
                        "enum": [
                            "Date",
                            "UpdateDate",
                            "CreationDate"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "You can override the JWT used fo authorization here. ie : Bearer JWT_TOKEN",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get organization order items",
                        "schema": {
                            "$ref": "#/definitions/HelloAsso.Api.V5.Models.Common.ResultsWithPaginationModelOfHelloAsso.Api.V5.Models.Statistics.Item"
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "order": {
                                        "id": 12578,
                                        "date": "2019-12-15T17:27:02+01:00",
                                        "formSlug": "formulaire-exemple",
                                        "formType": "Event",
                                        "organizationName": "name",
                                        "organizationSlug": "association-exemple",
                                        "organizationType": "Association1901",
                                        "organizationIsUnderColucheLaw": false,
                                        "formName": "name",
                                        "meta": {
                                            "createdAt": "2019-12-15T17:27:02+01:00",
                                            "updatedAt": "2019-12-15T17:27:02+01:00"
                                        },
                                        "isAnonymous": false,
                                        "isAmountHidden": false
                                    },
                                    "payer": {
                                        "email": "john.doe@test.com",
                                        "address": "23 rue du palmier",
                                        "city": "Paris",
                                        "zipCode": "75000",
                                        "country": "FRA",
                                        "company": "Hello Asso",
                                        "dateOfBirth": "1986-07-06T00:00:00+02:00",
                                        "firstName": "John",
                                        "lastName": "Doe"
                                    },
                                    "payments": [
                                        {
                                            "cashOutState": "CashedOut",
                                            "shareAmount": 10000,
                                            "id": 159875,
                                            "amount": 11000,
                                            "date": "2019-12-15T17:27:02+01:00",
                                            "paymentMeans": "Card",
                                            "installmentNumber": 1,
                                            "state": "Authorized",
                                            "meta": {
                                                "createdAt": "2019-12-15T17:27:02+01:00",
                                                "updatedAt": "2019-12-15T17:27:02+01:00"
                                            }
                                        },
                                        {
                                            "cashOutState": "Transfered",
                                            "shareAmount": 30000,
                                            "id": 159876,
                                            "amount": 9000,
                                            "date": "2020-01-15T17:27:02+01:00",
                                            "paymentMeans": "Card",
                                            "installmentNumber": 2,
                                            "state": "Authorized",
                                            "meta": {
                                                "createdAt": "2020-01-15T17:27:02+01:00",
                                                "updatedAt": "2020-01-15T17:27:02+01:00"
                                            }
                                        },
                                        {
                                            "shareAmount": 30000,
                                            "id": 159877,
                                            "amount": 9000,
                                            "date": "2020-02-15T17:27:02+01:00",
                                            "paymentMeans": "Card",
                                            "installmentNumber": 3,
                                            "state": "Pending",
                                            "meta": {
                                                "createdAt": "2020-02-15T17:27:02+01:00",
                                                "updatedAt": "2020-02-15T17:27:02+01:00"
                                            },
                                            "refundOperations": [
                                                {
                                                    "id": 1,
                                                    "amount": 2000,
                                                    "amountTip": 200,
                                                    "status": "Processed",
                                                    "meta": {
                                                        "createdAt": "2024-07-22T15:22:57.1479845+02:00",
                                                        "updatedAt": "2024-07-23T15:22:57.1479845+02:00"
                                                    }
                                                }
                                            ]
                                        }
                                    ],
                                    "name": "Adhesion Football",
                                    "user": {
                                        "firstName": "John",
                                        "lastName": "Doe"
                                    },
                                    "priceCategory": "Fixed",
                                    "discount": {
                                        "code": "DISC30 : -30â‚¬",
                                        "amount": 3000
                                    },
                                    "customFields": [
                                        {
                                            "id": 0,
                                            "name": "BirthDate",
                                            "type": "Date",
                                            "answer": "1978-09-15"
                                        },
                                        {
                                            "id": 0,
                                            "name": "ZipCode",
                                            "type": "Zipcode",
                                            "answer": "33600"
                                        }
                                    ],
                                    "options": [
                                        {
                                            "name": "T-Shirt",
                                            "amount": 700,
                                            "priceCategory": "Fixed",
                                            "isRequired": false,
                                            "customFields": [
                                                {
                                                    "id": 0,
                                                    "name": "Couleur",
                                                    "type": "ChoiceList",
                                                    "answer": "Bleue"
                                                }
                                            ],
                                            "optionId": 12581
                                        },
                                        {
                                            "name": "Casquette",
                                            "amount": 300,
                                            "priceCategory": "Fixed",
                                            "isRequired": false,
                                            "optionId": 12580
                                        }
                                    ],
                                    "qrCode": "MTI1Nzg6NjM3MTIwMjQwMjIwMDAwMDAw",
                                    "tierDescription": "tierDescription",
                                    "tierId": 168965,
                                    "comment": "comment",
                                    "id": 12578,
                                    "amount": 30000,
                                    "type": "Membership",
                                    "initialAmount": 30000,
                                    "state": "Canceled"
                                },
                                {
                                    "order": {
                                        "id": 12578,
                                        "date": "2019-12-15T17:27:02+01:00",
                                        "formSlug": "formulaire-exemple",
                                        "formType": "Event",
                                        "organizationName": "name",
                                        "organizationSlug": "association-exemple",
                                        "organizationType": "Association1901",
                                        "organizationIsUnderColucheLaw": false,
                                        "formName": "name",
                                        "meta": {
                                            "createdAt": "2019-12-15T17:27:02+01:00",
                                            "updatedAt": "2019-12-15T17:27:02+01:00"
                                        },
                                        "isAnonymous": false,
                                        "isAmountHidden": false
                                    },
                                    "payer": {
                                        "email": "john.doe@test.com",
                                        "address": "23 rue du palmier",
                                        "city": "Paris",
                                        "zipCode": "75000",
                                        "country": "FRA",
                                        "company": "Hello Asso",
                                        "dateOfBirth": "1986-07-06T00:00:00+02:00",
                                        "firstName": "John",
                                        "lastName": "Doe"
                                    },
                                    "payments": [
                                        {
                                            "cashOutState": "Transfered",
                                            "shareAmount": 1000,
                                            "id": 159875,
                                            "amount": 11000,
                                            "date": "2019-12-15T17:27:02+01:00",
                                            "paymentMeans": "Card",
                                            "installmentNumber": 1,
                                            "state": "Authorized",
                                            "meta": {
                                                "createdAt": "2019-12-15T17:27:02+01:00",
                                                "updatedAt": "2019-12-15T17:27:02+01:00"
                                            }
                                        }
                                    ],
                                    "user": {
                                        "firstName": "John",
                                        "lastName": "Doe"
                                    },
                                    "priceCategory": "Fixed",
                                    "qrCode": "MTI1Nzk6NjM3MTIwMjQwMjIwMDAwMDAw",
                                    "tierDescription": "tierDescription",
                                    "comment": "comment",
                                    "id": 12579,
                                    "amount": 1000,
                                    "type": "Donation",
                                    "initialAmount": 1000,
                                    "state": "Processed"
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "The JWT token hasn't the privileges or Roles for this action"
                    },
                    "401": {
                        "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
                    }
                },
                "security": [
                    {
                        "User": []
                    },
                    {
                        "Client": []
                    }
                ]
            }
        },
        "/orders/{orderId}": {
            "get": {
                "tags": [
                    "Orders - Items"
                ],
                "summary": "Get detailed information about a specific order",
                "description": "<br/><br/><b>Your token must have one of these roles : </b><br/>FormAdmin<br/>OrganizationAdmin<br/><br/>If you are an <b>association</b>, you can obtain these roles with your client.<br/>If you are a <b>partner</b>, you can obtain these roles by the authorize flow.<br/><br/><b>Your clientId must be allowed all of those privileges : </b> <br/> AccessTransactions<br/><br/>",
                "operationId": "Orders_GetOrder",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "You can override the JWT used fo authorization here. ie : Bearer JWT_TOKEN",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get order",
                        "schema": {
                            "$ref": "#/definitions/HelloAsso.Api.V5.Models.Statistics.OrderDetail"
                        },
                        "examples": {
                            "application/json": {
                                "payer": {
                                    "email": "john.doe@test.com",
                                    "address": "23 rue du palmier",
                                    "city": "Paris",
                                    "zipCode": "75000",
                                    "country": "FRA",
                                    "company": "Hello Asso",
                                    "dateOfBirth": "1986-07-06T00:00:00+02:00",
                                    "firstName": "John",
                                    "lastName": "Doe"
                                },
                                "items": [
                                    {
                                        "payments": [
                                            {
                                                "id": 159875,
                                                "shareAmount": 10000
                                            },
                                            {
                                                "id": 159876,
                                                "shareAmount": 10000
                                            },
                                            {
                                                "id": 159877,
                                                "shareAmount": 10000
                                            }
                                        ],
                                        "name": "Adhesion Football",
                                        "user": {
                                            "firstName": "John",
                                            "lastName": "Doe"
                                        },
                                        "priceCategory": "Fixed",
                                        "discount": {
                                            "code": "UNLOCK1 : -5â‚¬",
                                            "amount": 3000
                                        },
                                        "options": [
                                            {
                                                "name": "Casquette",
                                                "amount": 300,
                                                "priceCategory": "Fixed",
                                                "isRequired": true,
                                                "customFields": [
                                                    {
                                                        "id": 0,
                                                        "name": "Couleur",
                                                        "type": "ChoiceList",
                                                        "answer": "Rouge"
                                                    }
                                                ],
                                                "optionId": 12580
                                            },
                                            {
                                                "name": "T-Shirt",
                                                "amount": 700,
                                                "priceCategory": "Fixed",
                                                "isRequired": true,
                                                "customFields": [
                                                    {
                                                        "id": 0,
                                                        "name": "Taille",
                                                        "type": "ChoiceList",
                                                        "answer": "M"
                                                    }
                                                ],
                                                "optionId": 12581
                                            }
                                        ],
                                        "ticketUrl": "https://www.helloasso.com/associations/association-exemple/evenements/formulaire-exemple/ticket?ticketId=12578&ag=12578",
                                        "qrCode": "MTI1Nzg6NjM3MTIwMjQwMjIwMDAwMDAw",
                                        "tierDescription": "tierDescription",
                                        "tierId": 168965,
                                        "comment": "comment1",
                                        "id": 12578,
                                        "amount": 30000,
                                        "type": "Membership",
                                        "initialAmount": 30000,
                                        "state": "Processed"
                                    },
                                    {
                                        "payments": [
                                            {
                                                "id": 159875,
                                                "shareAmount": 1000
                                            }
                                        ],
                                        "user": {
                                            "firstName": "John",
                                            "lastName": "Doe"
                                        },
                                        "priceCategory": "Fixed",
                                        "qrCode": "MTI1Nzk6NjM3MTIwMjQwMjIwMDAwMDAw",
                                        "tierDescription": "tierDescription",
                                        "comment": "comment2",
                                        "id": 12579,
                                        "amount": 1000,
                                        "type": "Donation",
                                        "initialAmount": 1000,
                                        "state": "Processed"
                                    }
                                ],
                                "payments": [
                                    {
                                        "items": [
                                            {
                                                "id": 12578,
                                                "shareAmount": 11000,
                                                "shareItemAmount": 10000,
                                                "shareOptionsAmount": 1000
                                            },
                                            {
                                                "id": 12579,
                                                "shareAmount": 1000,
                                                "shareItemAmount": 1000
                                            }
                                        ],
                                        "cashOutDate": "2020-02-15T17:27:02+01:00",
                                        "cashOutState": "CashedOut",
                                        "paymentReceiptUrl": "https://www.helloasso.com/associations/association-exemple/evenements/formulaire-exemple/paiement-attestation/12578",
                                        "fiscalReceiptUrl": "https://www.helloasso.com/get-fisc.aspx?dau=159875",
                                        "id": 159875,
                                        "amount": 11000,
                                        "date": "2019-12-15T17:27:02+01:00",
                                        "paymentMeans": "Card",
                                        "installmentNumber": 1,
                                        "state": "Authorized",
                                        "meta": {
                                            "createdAt": "2019-12-15T17:27:02+01:00",
                                            "updatedAt": "2019-12-15T17:27:02+01:00"
                                        }
                                    },
                                    {
                                        "items": [
                                            {
                                                "id": 12578,
                                                "shareAmount": 10000,
                                                "shareItemAmount": 10000,
                                                "shareOptionsAmount": 0
                                            }
                                        ],
                                        "cashOutState": "Transfered",
                                        "paymentReceiptUrl": "https://www.helloasso.com/associations/association-exemple/evenements/formulaire-exemple/paiement-attestation/12578",
                                        "fiscalReceiptUrl": "https://www.helloasso.com/get-fisc.aspx?dau=159876",
                                        "id": 159876,
                                        "amount": 9000,
                                        "date": "2020-01-15T17:27:02+01:00",
                                        "paymentMeans": "Card",
                                        "installmentNumber": 1,
                                        "state": "Authorized",
                                        "meta": {
                                            "createdAt": "2020-01-15T17:27:02+01:00",
                                            "updatedAt": "2020-01-15T17:27:02+01:00"
                                        }
                                    },
                                    {
                                        "items": [
                                            {
                                                "id": 12578,
                                                "shareAmount": 10000,
                                                "shareItemAmount": 10000,
                                                "shareOptionsAmount": 0
                                            }
                                        ],
                                        "id": 159877,
                                        "amount": 9000,
                                        "date": "2020-02-15T17:27:02+01:00",
                                        "paymentMeans": "Card",
                                        "installmentNumber": 1,
                                        "state": "Pending",
                                        "meta": {
                                            "createdAt": "2020-02-15T17:27:02+01:00",
                                            "updatedAt": "2020-02-15T17:27:02+01:00"
                                        },
                                        "refundOperations": [
                                            {
                                                "id": 1,
                                                "amount": 2000,
                                                "amountTip": 200,
                                                "status": "Processed",
                                                "meta": {
                                                    "createdAt": "2024-07-22T15:22:57.3837211+02:00",
                                                    "updatedAt": "2024-07-23T15:22:57.3837211+02:00"
                                                }
                                            }
                                        ]
                                    }
                                ],
                                "amount": {
                                    "total": 10000,
                                    "vat": 0,
                                    "discount": 3000
                                },
                                "id": 12578,
                                "date": "2019-12-15T17:27:02+01:00",
                                "formSlug": "formulaire-exemple",
                                "formType": "Event",
                                "organizationName": "name",
                                "organizationSlug": "association-exemple",
                                "organizationType": "Association1901Rig",
                                "organizationIsUnderColucheLaw": false,
                                "meta": {
                                    "createdAt": "2019-12-15T17:27:02+01:00",
                                    "updatedAt": "2019-12-15T17:27:02+01:00"
                                },
                                "isAnonymous": false,
                                "isAmountHidden": false
                            }
                        }
                    },
                    "403": {
                        "description": "The JWT token hasn't the privileges or Roles for this action"
                    },
                    "401": {
                        "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
                    }
                },
                "security": [
                    {
                        "User": []
                    },
                    {
                        "Client": []
                    }
                ]
            }
        },
        "/organizations/{organizationSlug}/forms/{formType}/{formSlug}/orders": {
            "get": {
                "tags": [
                    "Orders - Items"
                ],
                "summary": "Get form orders",
                "description": "<br/><br/><b>Your token must have one of these roles : </b><br/>FormAdmin<br/>OrganizationAdmin<br/><br/>If you are an <b>association</b>, you can obtain these roles with your client.<br/>If you are a <b>partner</b>, you can obtain these roles by the authorize flow.<br/><br/><b>Your clientId must be allowed all of those privileges : </b> <br/> AccessTransactions<br/><br/>",
                "operationId": "Orders_GetFormOrders",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "organizationSlug",
                        "in": "path",
                        "description": "The organization slug",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "formSlug",
                        "in": "path",
                        "description": "The form slug",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "formType",
                        "in": "path",
                        "description": "The form type CrowdFunding, Membership, Event, Donation, PaymentForm, Checkout, Shop",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "CrowdFunding",
                            "Membership",
                            "Event",
                            "Donation",
                            "PaymentForm",
                            "Checkout",
                            "Shop"
                        ]
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "First Date Filter",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "End Date Filter",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "userSearchKey",
                        "in": "query",
                        "description": "Filter results on user or payer first name, last name or email",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pageIndex",
                        "in": "query",
                        "description": "The page of results to retrieve",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 1
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 20
                    },
                    {
                        "name": "continuationToken",
                        "in": "query",
                        "description": "Continuation Token from which we wish to retrieve results",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "withDetails",
                        "in": "query",
                        "description": "Set to true to return CustomFields",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "Sort forms orders by ascending or descending order. Default is descending",
                        "required": false,
                        "type": "string",
                        "default": "Desc",
                        "enum": [
                            "Asc",
                            "Desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "You can override the JWT used fo authorization here. ie : Bearer JWT_TOKEN",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get form orders",
                        "schema": {
                            "$ref": "#/definitions/HelloAsso.Api.V5.Models.Common.ResultsWithPaginationModelOfHelloAsso.Api.V5.Models.Statistics.Order"
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "payer": {
                                        "email": "john.doe@test.com",
                                        "address": "23 rue du palmier",
                                        "city": "Paris",
                                        "zipCode": "75000",
                                        "country": "FRA",
                                        "company": "Hello Asso",
                                        "dateOfBirth": "1986-07-06T00:00:00+02:00",
                                        "firstName": "John",
                                        "lastName": "Doe"
                                    },
                                    "items": [
                                        {
                                            "payments": [
                                                {
                                                    "id": 159875,
                                                    "shareAmount": 10000
                                                },
                                                {
                                                    "id": 159876,
                                                    "shareAmount": 10000
                                                },
                                                {
                                                    "id": 159877,
                                                    "shareAmount": 10000
                                                }
                                            ],
                                            "name": "Adhesion Football",
                                            "user": {
                                                "firstName": "John",
                                                "lastName": "Doe"
                                            },
                                            "priceCategory": "Fixed",
                                            "discount": {
                                                "code": "UNLOCK1 : -5â‚¬",
                                                "amount": 3000
                                            },
                                            "options": [
                                                {
                                                    "name": "Casquette",
                                                    "amount": 300,
                                                    "priceCategory": "Fixed",
                                                    "isRequired": true,
                                                    "customFields": [
                                                        {
                                                            "id": 0,
                                                            "name": "Couleur",
                                                            "type": "ChoiceList",
                                                            "answer": "Rouge"
                                                        }
                                                    ],
                                                    "optionId": 12580
                                                },
                                                {
                                                    "name": "T-Shirt",
                                                    "amount": 700,
                                                    "priceCategory": "Fixed",
                                                    "isRequired": true,
                                                    "customFields": [
                                                        {
                                                            "id": 0,
                                                            "name": "Taille",
                                                            "type": "ChoiceList",
                                                            "answer": "M"
                                                        }
                                                    ],
                                                    "optionId": 12581
                                                }
                                            ],
                                            "ticketUrl": "https://www.helloasso.com/associations/association-exemple/evenements/formulaire-exemple/ticket?ticketId=12578&ag=12578",
                                            "qrCode": "MTI1Nzg6NjM3MTIwMjQwMjIwMDAwMDAw",
                                            "tierDescription": "tierDescription",
                                            "tierId": 168965,
                                            "comment": "comment1",
                                            "id": 12578,
                                            "amount": 30000,
                                            "type": "Membership",
                                            "initialAmount": 30000,
                                            "state": "Processed"
                                        },
                                        {
                                            "payments": [
                                                {
                                                    "id": 159875,
                                                    "shareAmount": 1000
                                                }
                                            ],
                                            "user": {
                                                "firstName": "John",
                                                "lastName": "Doe"
                                            },
                                            "priceCategory": "Fixed",
                                            "qrCode": "MTI1Nzk6NjM3MTIwMjQwMjIwMDAwMDAw",
                                            "tierDescription": "tierDescription",
                                            "comment": "comment2",
                                            "id": 12579,
                                            "amount": 1000,
                                            "type": "Donation",
                                            "initialAmount": 1000,
                                            "state": "Processed"
                                        }
                                    ],
                                    "payments": [
                                        {
                                            "items": [
                                                {
                                                    "id": 12578,
                                                    "shareAmount": 11000,
                                                    "shareItemAmount": 10000,
                                                    "shareOptionsAmount": 1000
                                                },
                                                {
                                                    "id": 12579,
                                                    "shareAmount": 1000,
                                                    "shareItemAmount": 1000
                                                }
                                            ],
                                            "cashOutDate": "2020-02-15T17:27:02+01:00",
                                            "cashOutState": "CashedOut",
                                            "paymentReceiptUrl": "https://www.helloasso.com/associations/association-exemple/evenements/formulaire-exemple/paiement-attestation/12578",
                                            "fiscalReceiptUrl": "https://www.helloasso.com/get-fisc.aspx?dau=159875",
                                            "id": 159875,
                                            "amount": 11000,
                                            "date": "2019-12-15T17:27:02+01:00",
                                            "paymentMeans": "Card",
                                            "installmentNumber": 1,
                                            "state": "Authorized",
                                            "meta": {
                                                "createdAt": "2019-12-15T17:27:02+01:00",
                                                "updatedAt": "2019-12-15T17:27:02+01:00"
                                            }
                                        },
                                        {
                                            "items": [
                                                {
                                                    "id": 12578,
                                                    "shareAmount": 10000,
                                                    "shareItemAmount": 10000,
                                                    "shareOptionsAmount": 0
                                                }
                                            ],
                                            "cashOutState": "Transfered",
                                            "paymentReceiptUrl": "https://www.helloasso.com/associations/association-exemple/evenements/formulaire-exemple/paiement-attestation/12578",
                                            "fiscalReceiptUrl": "https://www.helloasso.com/get-fisc.aspx?dau=159876",
                                            "id": 159876,
                                            "amount": 9000,
                                            "date": "2020-01-15T17:27:02+01:00",
                                            "paymentMeans": "Card",
                                            "installmentNumber": 1,
                                            "state": "Authorized",
                                            "meta": {
                                                "createdAt": "2020-01-15T17:27:02+01:00",
                                                "updatedAt": "2020-01-15T17:27:02+01:00"
                                            }
                                        },
                                        {
                                            "items": [
                                                {
                                                    "id": 12578,
                                                    "shareAmount": 10000,
                                                    "shareItemAmount": 10000,
                                                    "shareOptionsAmount": 0
                                                }
                                            ],
                                            "id": 159877,
                                            "amount": 9000,
                                            "date": "2020-02-15T17:27:02+01:00",
                                            "paymentMeans": "Card",
                                            "installmentNumber": 1,
                                            "state": "Pending",
                                            "meta": {
                                                "createdAt": "2020-02-15T17:27:02+01:00",
                                                "updatedAt": "2020-02-15T17:27:02+01:00"
                                            },
                                            "refundOperations": [
                                                {
                                                    "id": 1,
                                                    "amount": 2000,
                                                    "amountTip": 200,
                                                    "status": "Processed",
                                                    "meta": {
                                                        "createdAt": "2024-07-22T15:22:57.3978583+02:00",
                                                        "updatedAt": "2024-07-23T15:22:57.3978583+02:00"
                                                    }
                                                }
                                            ]
                                        }
                                    ],
                                    "amount": {
                                        "total": 10000,
                                        "vat": 0,
                                        "discount": 3000
                                    },
                                    "id": 12578,
                                    "date": "2019-12-15T17:27:02+01:00",
                                    "formSlug": "formulaire-exemple",
                                    "formType": "Event",
                                    "organizationName": "name",
                                    "organizationSlug": "association-exemple",
                                    "organizationType": "Association1901Rig",
                                    "organizationIsUnderColucheLaw": false,
                                    "meta": {
                                        "createdAt": "2019-12-15T17:27:02+01:00",
                                        "updatedAt": "2019-12-15T17:27:02+01:00"
                                    },
                                    "isAnonymous": false,
                                    "isAmountHidden": false
                                },
                                {
                                    "payer": {
                                        "email": "john.doe@test.com",
                                        "address": "23 rue du palmier",
                                        "city": "Paris",
                                        "zipCode": "75000",
                                        "country": "FRA",
                                        "company": "Hello Asso",
                                        "dateOfBirth": "1986-07-06T00:00:00+02:00",
                                        "firstName": "John",
                                        "lastName": "Doe"
                                    },
                                    "items": [
                                        {
                                            "name": "Concert Rock",
                                            "user": {
                                                "firstName": "John",
                                                "lastName": "Doe"
                                            },
                                            "priceCategory": "Fixed",
                                            "qrCode": "MTY5ODc6NjM3MTcxMDc2MjIwMDAwMDAw",
                                            "tierDescription": "tierDescription",
                                            "tierId": 175698,
                                            "comment": "comment3",
                                            "id": 16987,
                                            "amount": 3000,
                                            "type": "Registration",
                                            "initialAmount": 3000,
                                            "state": "Processed"
                                        }
                                    ],
                                    "payments": [
                                        {
                                            "items": [
                                                {
                                                    "id": 16987,
                                                    "shareAmount": 3000,
                                                    "shareItemAmount": 3000,
                                                    "shareOptionsAmount": 0
                                                }
                                            ],
                                            "paymentReceiptUrl": "https://www.helloasso.com/associations/association-exemple/evenements/formulaire-exemple/paiement-attestation/16987",
                                            "fiscalReceiptUrl": "https://www.helloasso.com/get-fisc.aspx?dau=172658",
                                            "id": 172658,
                                            "amount": 3000,
                                            "date": "2020-02-12T13:33:42+01:00",
                                            "paymentMeans": "Card",
                                            "installmentNumber": 1,
                                            "state": "Authorized",
                                            "meta": {
                                                "createdAt": "2020-02-12T13:33:42+01:00",
                                                "updatedAt": "2020-02-12T13:33:42+01:00"
                                            }
                                        }
                                    ],
                                    "amount": {
                                        "total": 3000,
                                        "vat": 500,
                                        "discount": 0
                                    },
                                    "id": 16987,
                                    "date": "2020-02-12T13:33:42+01:00",
                                    "formSlug": "formulaire-exemple",
                                    "formType": "Event",
                                    "organizationName": "name",
                                    "organizationSlug": "association-exemple",
                                    "organizationType": "Association1901Rig",
                                    "organizationIsUnderColucheLaw": false,
                                    "meta": {
                                        "createdAt": "2020-02-12T13:33:42+01:00",
                                        "updatedAt": "2020-02-12T13:33:42+01:00"
                                    },
                                    "isAnonymous": false,
                                    "isAmountHidden": false
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "The JWT token hasn't the privileges or Roles for this action"
                    },
                    "401": {
                        "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
                    }
                },
                "security": [
                    {
                        "User": []
                    },
                    {
                        "Client": []
                    }
                ]
            }
        },
        "/organizations/{organizationSlug}/orders": {
            "get": {
                "tags": [
                    "Orders - Items"
                ],
                "summary": "Get a list of orders within a specific organization",
                "description": "<br/><br/><b>Your token must have one of these roles : </b><br/>OrganizationAdmin<br/><br/>If you are an <b>association</b>, you can obtain these roles with your client.<br/>If you are a <b>partner</b>, you can obtain these roles by the authorize flow.<br/><br/><b>Your clientId must be allowed all of those privileges : </b> <br/> AccessTransactions<br/><br/>",
                "operationId": "Orders_GetOrganizationOrders",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "organizationSlug",
                        "in": "path",
                        "description": "The organization slug",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "First Date Filter",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "End Date Filter",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "userSearchKey",
                        "in": "query",
                        "description": "Filter results on user or payer first name, last name or email",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pageIndex",
                        "in": "query",
                        "description": "The page of results to retrieve",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 1
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 20
                    },
                    {
                        "name": "continuationToken",
                        "in": "query",
                        "description": "Continuation Token from which we wish to retrieve results",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "formTypes",
                        "in": "query",
                        "description": "The type of the form CrowdFunding, Membership, Event, Donation, PaymentForm, Checkout, Shop",
                        "required": false,
                        "items": {},
                        "collectionFormat": "multi",
                        "type": "array"
                    },
                    {
                        "name": "withDetails",
                        "in": "query",
                        "description": "Set to true to return CustomFields",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "Sort organizations orders by ascending or descending order. Default is descending",
                        "required": false,
                        "type": "string",
                        "default": "Desc",
                        "enum": [
                            "Asc",
                            "Desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "You can override the JWT used fo authorization here. ie : Bearer JWT_TOKEN",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get organization orders",
                        "schema": {
                            "$ref": "#/definitions/HelloAsso.Api.V5.Models.Common.ResultsWithPaginationModelOfHelloAsso.Api.V5.Models.Statistics.Order"
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "payer": {
                                        "email": "john.doe@test.com",
                                        "address": "23 rue du palmier",
                                        "city": "Paris",
                                        "zipCode": "75000",
                                        "country": "FRA",
                                        "company": "Hello Asso",
                                        "dateOfBirth": "1986-07-06T00:00:00+02:00",
                                        "firstName": "John",
                                        "lastName": "Doe"
                                    },
                                    "items": [
                                        {
                                            "payments": [
                                                {
                                                    "id": 159875,
                                                    "shareAmount": 10000
                                                },
                                                {
                                                    "id": 159876,
                                                    "shareAmount": 10000
                                                },
                                                {
                                                    "id": 159877,
                                                    "shareAmount": 10000
                                                }
                                            ],
                                            "name": "Adhesion Football",
                                            "user": {
                                                "firstName": "John",
                                                "lastName": "Doe"
                                            },
                                            "priceCategory": "Fixed",
                                            "discount": {
                                                "code": "UNLOCK1 : -5â‚¬",
                                                "amount": 3000
                                            },
                                            "options": [
                                                {
                                                    "name": "Casquette",
                                                    "amount": 300,
                                                    "priceCategory": "Fixed",
                                                    "isRequired": true,
                                                    "customFields": [
                                                        {
                                                            "id": 0,
                                                            "name": "Couleur",
                                                            "type": "ChoiceList",
                                                            "answer": "Rouge"
                                                        }
                                                    ],
                                                    "optionId": 12580
                                                },
                                                {
                                                    "name": "T-Shirt",
                                                    "amount": 700,
                                                    "priceCategory": "Fixed",
                                                    "isRequired": true,
                                                    "customFields": [
                                                        {
                                                            "id": 0,
                                                            "name": "Taille",
                                                            "type": "ChoiceList",
                                                            "answer": "M"
                                                        }
                                                    ],
                                                    "optionId": 12581
                                                }
                                            ],
                                            "ticketUrl": "https://www.helloasso.com/associations/association-exemple/evenements/formulaire-exemple/ticket?ticketId=12578&ag=12578",
                                            "qrCode": "MTI1Nzg6NjM3MTIwMjQwMjIwMDAwMDAw",
                                            "tierDescription": "tierDescription",
                                            "tierId": 168965,
                                            "comment": "comment1",
                                            "id": 12578,
                                            "amount": 30000,
                                            "type": "Membership",
                                            "initialAmount": 30000,
                                            "state": "Processed"
                                        },
                                        {
                                            "payments": [
                                                {
                                                    "id": 159875,
                                                    "shareAmount": 1000
                                                }
                                            ],
                                            "user": {
                                                "firstName": "John",
                                                "lastName": "Doe"
                                            },
                                            "priceCategory": "Fixed",
                                            "qrCode": "MTI1Nzk6NjM3MTIwMjQwMjIwMDAwMDAw",
                                            "tierDescription": "tierDescription",
                                            "comment": "comment2",
                                            "id": 12579,
                                            "amount": 1000,
                                            "type": "Donation",
                                            "initialAmount": 1000,
                                            "state": "Processed"
                                        }
                                    ],
                                    "payments": [
                                        {
                                            "items": [
                                                {
                                                    "id": 12578,
                                                    "shareAmount": 11000,
                                                    "shareItemAmount": 10000,
                                                    "shareOptionsAmount": 1000
                                                },
                                                {
                                                    "id": 12579,
                                                    "shareAmount": 1000,
                                                    "shareItemAmount": 1000
                                                }
                                            ],
                                            "cashOutDate": "2020-02-15T17:27:02+01:00",
                                            "cashOutState": "CashedOut",
                                            "paymentReceiptUrl": "https://www.helloasso.com/associations/association-exemple/evenements/formulaire-exemple/paiement-attestation/12578",
                                            "fiscalReceiptUrl": "https://www.helloasso.com/get-fisc.aspx?dau=159875",
                                            "id": 159875,
                                            "amount": 11000,
                                            "date": "2019-12-15T17:27:02+01:00",
                                            "paymentMeans": "Card",
                                            "installmentNumber": 1,
                                            "state": "Authorized",
                                            "meta": {
                                                "createdAt": "2019-12-15T17:27:02+01:00",
                                                "updatedAt": "2019-12-15T17:27:02+01:00"
                                            }
                                        },
                                        {
                                            "items": [
                                                {
                                                    "id": 12578,
                                                    "shareAmount": 10000,
                                                    "shareItemAmount": 10000,
                                                    "shareOptionsAmount": 0
                                                }
                                            ],
                                            "cashOutState": "Transfered",
                                            "paymentReceiptUrl": "https://www.helloasso.com/associations/association-exemple/evenements/formulaire-exemple/paiement-attestation/12578",
                                            "fiscalReceiptUrl": "https://www.helloasso.com/get-fisc.aspx?dau=159876",
                                            "id": 159876,
                                            "amount": 9000,
                                            "date": "2020-01-15T17:27:02+01:00",
                                            "paymentMeans": "Card",
                                            "installmentNumber": 1,
                                            "state": "Authorized",
                                            "meta": {
                                                "createdAt": "2020-01-15T17:27:02+01:00",
                                                "updatedAt": "2020-01-15T17:27:02+01:00"
                                            }
                                        },
                                        {
                                            "items": [
                                                {
                                                    "id": 12578,
                                                    "shareAmount": 10000,
                                                    "shareItemAmount": 10000,
                                                    "shareOptionsAmount": 0
                                                }
                                            ],
                                            "id": 159877,
                                            "amount": 9000,
                                            "date": "2020-02-15T17:27:02+01:00",
                                            "paymentMeans": "Card",
                                            "installmentNumber": 1,
                                            "state": "Pending",
                                            "meta": {
                                                "createdAt": "2020-02-15T17:27:02+01:00",
                                                "updatedAt": "2020-02-15T17:27:02+01:00"
                                            },
                                            "refundOperations": [
                                                {
                                                    "id": 1,
                                                    "amount": 2000,
                                                    "amountTip": 200,
                                                    "status": "Processed",
                                                    "meta": {
                                                        "createdAt": "2024-07-22T15:22:57.402728+02:00",
                                                        "updatedAt": "2024-07-23T15:22:57.402728+02:00"
                                                    }
                                                }
                                            ]
                                        }
                                    ],
                                    "amount": {
                                        "total": 10000,
                                        "vat": 0,
                                        "discount": 3000
                                    },
                                    "id": 12578,
                                    "date": "2019-12-15T17:27:02+01:00",
                                    "formSlug": "formulaire-exemple",
                                    "formType": "Event",
                                    "organizationName": "name",
                                    "organizationSlug": "association-exemple",
                                    "organizationType": "Association1901Rig",
                                    "organizationIsUnderColucheLaw": false,
                                    "meta": {
                                        "createdAt": "2019-12-15T17:27:02+01:00",
                                        "updatedAt": "2019-12-15T17:27:02+01:00"
                                    },
                                    "isAnonymous": false,
                                    "isAmountHidden": false
                                },
                                {
                                    "payer": {
                                        "email": "john.doe@test.com",
                                        "address": "23 rue du palmier",
                                        "city": "Paris",
                                        "zipCode": "75000",
                                        "country": "FRA",
                                        "company": "Hello Asso",
                                        "dateOfBirth": "1986-07-06T00:00:00+02:00",
                                        "firstName": "John",
                                        "lastName": "Doe"
                                    },
                                    "items": [
                                        {
                                            "name": "Concert Rock",
                                            "user": {
                                                "firstName": "John",
                                                "lastName": "Doe"
                                            },
                                            "priceCategory": "Fixed",
                                            "qrCode": "MTY5ODc6NjM3MTcxMDc2MjIwMDAwMDAw",
                                            "tierDescription": "tierDescription",
                                            "tierId": 175698,
                                            "comment": "comment3",
                                            "id": 16987,
                                            "amount": 3000,
                                            "type": "Registration",
                                            "initialAmount": 3000,
                                            "state": "Processed"
                                        }
                                    ],
                                    "payments": [
                                        {
                                            "items": [
                                                {
                                                    "id": 16987,
                                                    "shareAmount": 3000,
                                                    "shareItemAmount": 3000,
                                                    "shareOptionsAmount": 0
                                                }
                                            ],
                                            "paymentReceiptUrl": "https://www.helloasso.com/associations/association-exemple/evenements/formulaire-exemple/paiement-attestation/16987",
                                            "fiscalReceiptUrl": "https://www.helloasso.com/get-fisc.aspx?dau=172658",
                                            "id": 172658,
                                            "amount": 3000,
                                            "date": "2020-02-12T13:33:42+01:00",
                                            "paymentMeans": "Card",
                                            "installmentNumber": 1,
                                            "state": "Authorized",
                                            "meta": {
                                                "createdAt": "2020-02-12T13:33:42+01:00",
                                                "updatedAt": "2020-02-12T13:33:42+01:00"
                                            }
                                        }
                                    ],
                                    "amount": {
                                        "total": 3000,
                                        "vat": 500,
                                        "discount": 0
                                    },
                                    "id": 16987,
                                    "date": "2020-02-12T13:33:42+01:00",
                                    "formSlug": "formulaire-exemple",
                                    "formType": "Event",
                                    "organizationName": "name",
                                    "organizationSlug": "association-exemple",
                                    "organizationType": "Association1901Rig",
                                    "organizationIsUnderColucheLaw": false,
                                    "meta": {
                                        "createdAt": "2020-02-12T13:33:42+01:00",
                                        "updatedAt": "2020-02-12T13:33:42+01:00"
                                    },
                                    "isAnonymous": false,
                                    "isAmountHidden": false
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "The JWT token hasn't the privileges or Roles for this action"
                    },
                    "401": {
                        "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
                    }
                },
                "security": [
                    {
                        "User": []
                    },
                    {
                        "Client": []
                    }
                ]
            }
        },
        "/orders/{orderId}/cancel": {
            "post": {
                "tags": [
                    "Orders - Items"
                ],
                "summary": "Cancels future payments for an order, no refunds will be given.",
                "description": "<br/><br/><b>Your token must have one of these roles : </b><br/>OrganizationAdmin<br/>FormAdmin<br/><br/>If you are an <b>association</b>, you can obtain these roles with your client.<br/>If you are a <b>partner</b>, you can obtain these roles by the authorize flow.<br/><br/><b>Your clientId must be allowed all of those privileges : </b> <br/> RefundManagement<br/><br/>",
                "operationId": "Orders_PostCancelOrder",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "The order identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "You can override the JWT used fo authorization here. ie : Bearer JWT_TOKEN",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "The JWT token hasn't the privileges or Roles for this action"
                    },
                    "401": {
                        "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
                    }
                },
                "security": [
                    {
                        "User": []
                    },
                    {
                        "Client": []
                    }
                ]
            }
        },
        "/organizations/legal-informations/legal-structures": {
            "get": {
                "tags": [
                    "Organization legal informations"
                ],
                "summary": "Get the organization legal structures with visibility true.",
                "description": "<br/><br/><b>Your token must have one of these roles : </b><br/>OrganizationAdmin<br/><br/>If you are an <b>association</b>, you can obtain these roles with your client.<br/>If you are a <b>partner</b>, you can obtain these roles by the authorize flow.<br/><br/><b>Your clientId must be allowed all of those privileges : </b> <br/> OrganizationAdministration<br/><br/>",
                "operationId": "OrganizationLegalInformations_GetOrganizationLegalStructures",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "You can override the JWT used fo authorization here. ie : Bearer JWT_TOKEN",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The organization legal structures"
                    },
                    "404": {
                        "description": "The organization legal structures don't exist"
                    },
                    "403": {
                        "description": "The JWT token hasn't the privileges or Roles for this action"
                    },
                    "401": {
                        "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
                    }
                },
                "security": [
                    {
                        "User": []
                    },
                    {
                        "Client": []
                    }
                ]
            }
        },
        "/organizations/legal-informations/tax-information-texts": {
            "get": {
                "tags": [
                    "Organization legal informations"
                ],
                "description": "<br/><br/><b>Your token must have one of these roles : </b><br/>OrganizationAdmin<br/><br/>If you are an <b>association</b>, you can obtain these roles with your client.<br/>If you are a <b>partner</b>, you can obtain these roles by the authorize flow.<br/><br/><b>Your clientId must be allowed all of those privileges : </b> <br/> OrganizationAdministration<br/><br/>",
                "operationId": "OrganizationLegalInformations_GetOrganizationTaxInformationTexts",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "organizationSlug",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "You can override the JWT used fo authorization here. ie : Bearer JWT_TOKEN",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The organization tax information texts"
                    },
                    "404": {
                        "description": "The organization tax information texts don't exist"
                    },
                    "403": {
                        "description": "The JWT token hasn't the privileges or Roles for this action"
                    },
                    "401": {
                        "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
                    }
                },
                "security": [
                    {
                        "User": []
                    },
                    {
                        "Client": []
                    }
                ]
            }
        },
        "/organizations/legal-informations/{organizationSlug}/configuration": {
            "get": {
                "tags": [
                    "Organization legal informations"
                ],
                "description": "<br/><br/><b>Your token must have one of these roles : </b><br/>OrganizationAdmin<br/><br/>If you are an <b>association</b>, you can obtain these roles with your client.<br/>If you are a <b>partner</b>, you can obtain these roles by the authorize flow.<br/><br/><b>Your clientId must be allowed all of those privileges : </b> <br/> OrganizationAdministration<br/><br/>",
                "operationId": "OrganizationLegalInformations_GetOrganizationLegalInformationConfiguration",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "organizationSlug",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "You can override the JWT used fo authorization here. ie : Bearer JWT_TOKEN",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The organization legal information configuration."
                    },
                    "404": {
                        "description": "The organization legal information configuration don't found."
                    },
                    "403": {
                        "description": "The JWT token hasn't the privileges or Roles for this action"
                    },
                    "401": {
                        "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
                    }
                },
                "security": [
                    {
                        "User": []
                    },
                    {
                        "Client": []
                    }
                ]
            }
        },
        "/organizations/{organizationSlug}": {
            "get": {
                "tags": [
                    "Organization visualisation"
                ],
                "summary": "Get Organization details",
                "description": "Get the public information of the specified organization.<br/><br/><b>Your clientId must be allowed all of those privileges : </b> <br/> AccessPublicData<br/><br/>",
                "operationId": "Organizations_GetOrganization",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "organizationSlug",
                        "in": "path",
                        "description": "The organization Slug",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "You can override the JWT used fo authorization here. ie : Bearer JWT_TOKEN",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Organization by slug",
                        "schema": {
                            "$ref": "#/definitions/HelloAsso.Api.V5.Models.Organization.OrganizationModel"
                        },
                        "examples": {
                            "application/json": {
                                "isAuthenticated": true,
                                "banner": "https://cdn.helloasso.com/img/photos/https://cdn.helloasso.com/img/photos/banner.png",
                                "fiscalReceiptEligibility": false,
                                "fiscalReceiptIssuanceEnabled": false,
                                "type": "Association1901",
                                "rnaNumber": "W123456789",
                                "logo": "https://cdn.helloasso.com/img/logos/association logo example.jpg",
                                "name": "Association Exemple",
                                "role": "OrganizationAdmin",
                                "city": "Paris",
                                "zipCode": "75000",
                                "description": "Ceci est un modÃ¨le d'association exemple.",
                                "updateDate": "2024-07-24T15:22:57.4145747+02:00",
                                "url": "https://www.helloasso.com/associations/association-exemple",
                                "organizationSlug": "association-exemple"
                            }
                        }
                    },
                    "403": {
                        "description": "The JWT token hasn't the privileges or Roles for this action"
                    },
                    "401": {
                        "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
                    }
                },
                "security": [
                    {
                        "User": []
                    },
                    {
                        "Client": []
                    }
                ]
            }
        },
        "/partners/me/api-clients": {
            "put": {
                "tags": [
                    "Partner management"
                ],
                "summary": "A partner can update his domain",
                "description": "<br/><br/><b>Your clientId must be allowed all of those privileges : </b> <br/> AccessPublicData<br/><br/>",
                "operationId": "Partners_PutPartnerDomain",
                "consumes": [
                    "application/json",
                    "text/json"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HelloAsso.Api.V5.Models.Accounts.Clients.PublicPutApiClientRequest"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "You can override the JWT used fo authorization here. ie : Bearer JWT_TOKEN",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Partner api client successfully updated"
                    },
                    "403": {
                        "description": "The JWT token hasn't the privileges or Roles for this action"
                    },
                    "401": {
                        "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
                    }
                },
                "security": [
                    {
                        "User": []
                    },
                    {
                        "Client": []
                    }
                ]
            }
        },
        "/partners/me/api-notifications/organizations/{organizationSlug}": {
            "put": {
                "tags": [
                    "Partner management"
                ],
                "summary": "A partner can update a notification url linked to an organization",
                "description": "<br/><br/><b>Your token must have one of these roles : </b><br/>OrganizationAdmin<br/><br/>If you are an <b>association</b>, you can obtain these roles with your client.<br/>If you are a <b>partner</b>, you can obtain these roles by the authorize flow.<br/><br/><b>Your clientId must be allowed all of those privileges : </b> <br/> AccessPublicData<br/><br/>",
                "operationId": "Partners_PutPartnerOrganizationUrlNotification",
                "consumes": [
                    "application/json",
                    "text/json"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The body of the request, do not specify a notification type to update the main notification Url",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HelloAsso.Api.V5.Models.ApiNotifications.PostApiUrlNotificationBody"
                        }
                    },
                    {
                        "name": "organizationSlug",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "You can override the JWT used fo authorization here. ie : Bearer JWT_TOKEN",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Partner Organization notification URL successfully updated."
                    },
                    "403": {
                        "description": "The JWT token hasn't the privileges or Roles for this action"
                    },
                    "401": {
                        "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
                    }
                },
                "security": [
                    {
                        "User": []
                    },
                    {
                        "Client": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Partner management"
                ],
                "summary": "A partner can delete a notification url linked to an organization",
                "description": "<br/><br/><b>Your token must have one of these roles : </b><br/>OrganizationAdmin<br/><br/>If you are an <b>association</b>, you can obtain these roles with your client.<br/>If you are a <b>partner</b>, you can obtain these roles by the authorize flow.<br/><br/><b>Your clientId must be allowed all of those privileges : </b> <br/> AccessPublicData<br/><br/>",
                "operationId": "Partners_DeletePartnerOrganizationUrlNotification",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "organizationSlug",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "notificationType",
                        "in": "query",
                        "description": "Do not specify a notification type to remove the main notification Url",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "Payment",
                            "Order",
                            "Form",
                            "Organization"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "You can override the JWT used fo authorization here. ie : Bearer JWT_TOKEN",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Partner organization notification url successfully deleted"
                    },
                    "403": {
                        "description": "The JWT token hasn't the privileges or Roles for this action"
                    },
                    "401": {
                        "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
                    }
                },
                "security": [
                    {
                        "User": []
                    },
                    {
                        "Client": []
                    }
                ]
            }
        },
        "/partners/me/api-notifications": {
            "put": {
                "tags": [
                    "Partner management"
                ],
                "summary": "A partner can update his main notification url",
                "description": "<br/><br/><b>Your clientId must be allowed all of those privileges : </b> <br/> AccessPublicData<br/><br/>",
                "operationId": "Partners_PutPartnerUrlNotification",
                "consumes": [
                    "application/json",
                    "text/json"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The body of the request, do not specify a notification type to update the main notification Url",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HelloAsso.Api.V5.Models.ApiNotifications.PostApiUrlNotificationBody"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "You can override the JWT used fo authorization here. ie : Bearer JWT_TOKEN",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Main notification URL successfully updated."
                    },
                    "403": {
                        "description": "The JWT token hasn't the privileges or Roles for this action"
                    },
                    "401": {
                        "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
                    }
                },
                "security": [
                    {
                        "User": []
                    },
                    {
                        "Client": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Partner management"
                ],
                "summary": "A partner can delete his main notification url",
                "description": "<br/><br/><b>Your clientId must be allowed all of those privileges : </b> <br/> AccessPublicData<br/><br/>",
                "operationId": "Partners_DeletePartnerUrlNotification",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "notificationType",
                        "in": "query",
                        "description": "Do not specify a notification type to remove the main notification Url",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "Payment",
                            "Order",
                            "Form",
                            "Organization"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "You can override the JWT used fo authorization here. ie : Bearer JWT_TOKEN",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Partner notification url successfully deleted"
                    },
                    "403": {
                        "description": "The JWT token hasn't the privileges or Roles for this action"
                    },
                    "401": {
                        "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
                    }
                },
                "security": [
                    {
                        "User": []
                    },
                    {
                        "Client": []
                    }
                ]
            }
        },
        "/partners/me": {
            "get": {
                "tags": [
                    "Partner management"
                ],
                "summary": "A partner can retrieve his information",
                "description": "<br/><br/><b>Your clientId must be allowed all of those privileges : </b> <br/> AccessPublicData<br/><br/>",
                "operationId": "Partners_GetPartner",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "You can override the JWT used fo authorization here. ie : Bearer JWT_TOKEN",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve requesting partner detail",
                        "schema": {
                            "$ref": "#/definitions/HelloAsso.Api.V5.Models.Partners.PartnerPublicModel"
                        }
                    },
                    "403": {
                        "description": "The JWT token hasn't the privileges or Roles for this action"
                    },
                    "401": {
                        "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
                    }
                },
                "security": [
                    {
                        "User": []
                    },
                    {
                        "Client": []
                    }
                ]
            }
        },
        "/partners/me/organizations": {
            "get": {
                "tags": [
                    "Partner management"
                ],
                "summary": "Get all organization by partner",
                "description": "List all organization linked to partner.\r\nResults are ordered by Api visibility update date ascending.\r\nThe total number of results (or pages) isn't retrievable, so the pagination information returned will always say -1.<br/><br/><b>Your clientId must be allowed all of those privileges : </b> <br/> AccessPublicData<br/><br/>",
                "operationId": "Partners_GetOrganizations",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 20
                    },
                    {
                        "name": "continuationToken",
                        "in": "query",
                        "description": "Continuation Token from which we wish to retrieve results",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "You can override the JWT used fo authorization here. ie : Bearer JWT_TOKEN",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Organization List",
                        "schema": {
                            "$ref": "#/definitions/HelloAsso.Api.V5.Models.Common.ResultsWithPaginationModelOfHelloAsso.Api.V5.Models.Directory.PartnerOrganizationModel"
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "organization": {
                                        "linkedPartners": [
                                            "FFBB"
                                        ],
                                        "banner": "https://cdn.helloasso.com/img/photos/organizationBanner",
                                        "fiscalReceiptEligibility": false,
                                        "fiscalReceiptIssuanceEnabled": true,
                                        "type": "Association1901",
                                        "category": "organizationCategoryLabel",
                                        "rnaNumber": "X123456789",
                                        "logo": "https://cdn.helloasso.com/img/logos/organizationLogo",
                                        "name": "organizationName",
                                        "city": "organizationCity",
                                        "zipCode": "organizationZipCode",
                                        "description": "organizationDescription",
                                        "updateDate": "2024-07-24T15:22:57.4326725+02:00",
                                        "url": "https://www.helloasso.com/associations/organizationSlug?utm_source=partenaire&utm_medium=referral&utm_campaign=API&utm_content=association",
                                        "organizationSlug": "organizationSlug"
                                    },
                                    "availableAccessToken": true
                                },
                                {
                                    "organization": {
                                        "linkedPartners": [
                                            "FFBB"
                                        ],
                                        "banner": "https://cdn.helloasso.com/img/photos/organizationBanner",
                                        "fiscalReceiptEligibility": false,
                                        "fiscalReceiptIssuanceEnabled": true,
                                        "type": "Association1901",
                                        "category": "organizationCategoryLabel",
                                        "rnaNumber": "X123456789",
                                        "logo": "https://cdn.helloasso.com/img/logos/organizationLogo",
                                        "name": "organizationName",
                                        "city": "organizationCity",
                                        "zipCode": "organizationZipCode",
                                        "description": "organizationDescription",
                                        "updateDate": "2024-07-24T15:22:57.4326725+02:00",
                                        "url": "https://www.helloasso.com/associations/organizationSlug?utm_source=partenaire&utm_medium=referral&utm_campaign=API&utm_content=association",
                                        "organizationSlug": "organizationSlug"
                                    },
                                    "availableAccessToken": false
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "The JWT token hasn't the privileges or Roles for this action"
                    },
                    "401": {
                        "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
                    }
                },
                "security": [
                    {
                        "User": []
                    },
                    {
                        "Client": []
                    }
                ]
            }
        },
        "/payments/{paymentId}": {
            "get": {
                "tags": [
                    "Payments management"
                ],
                "summary": "Get detailed information about a specific payment.",
                "description": "<br/><br/><b>Your token must have one of these roles : </b><br/>FormAdmin<br/>OrganizationAdmin<br/><br/>If you are an <b>association</b>, you can obtain these roles with your client.<br/>If you are a <b>partner</b>, you can obtain these roles by the authorize flow.<br/><br/><b>Your clientId must be allowed all of those privileges : </b> <br/> AccessTransactions<br/><br/>",
                "operationId": "Payments_GetPayment",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "paymentId",
                        "in": "path",
                        "description": "The payment identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "withFailedRefundOperation",
                        "in": "query",
                        "description": "True to retrieve the refund operation in the states 'ABORTED', 'CANCELED', 'ERROR', 'REFUSED'.",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "You can override the JWT used fo authorization here. ie : Bearer JWT_TOKEN",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get payment",
                        "schema": {
                            "$ref": "#/definitions/HelloAsso.Api.V5.Models.Statistics.PaymentDetail"
                        },
                        "examples": {
                            "application/json": {
                                "order": {
                                    "id": 12578,
                                    "date": "2019-12-15T17:27:02+01:00",
                                    "formSlug": "formulaire-exemple",
                                    "formType": "Event",
                                    "organizationName": "name",
                                    "organizationSlug": "association-exemple",
                                    "organizationType": "Association1901",
                                    "organizationIsUnderColucheLaw": false,
                                    "formName": "name",
                                    "meta": {
                                        "createdAt": "2019-12-15T17:27:02+01:00",
                                        "updatedAt": "2019-12-15T17:27:02+01:00"
                                    },
                                    "isAnonymous": false,
                                    "isAmountHidden": false
                                },
                                "payer": {
                                    "email": "john.doe@test.com",
                                    "address": "23 rue du palmier",
                                    "city": "Paris",
                                    "zipCode": "75000",
                                    "country": "FRA",
                                    "company": "Hello Asso",
                                    "dateOfBirth": "1986-07-06T00:00:00+02:00",
                                    "firstName": "John",
                                    "lastName": "Doe"
                                },
                                "items": [
                                    {
                                        "shareAmount": 11000,
                                        "shareItemAmount": 10000,
                                        "shareOptionsAmount": 1000,
                                        "id": 12578,
                                        "amount": 30000,
                                        "type": "Membership",
                                        "state": "Processed"
                                    },
                                    {
                                        "shareAmount": 1000,
                                        "shareItemAmount": 1000,
                                        "id": 12579,
                                        "amount": 1000,
                                        "type": "Donation",
                                        "state": "Processed"
                                    }
                                ],
                                "paymentReceiptUrl": "https://www.helloasso.com/associations/association-exemple/evenements/formulaire-exemple/paiement-attestation/12578",
                                "id": 12345,
                                "amount": 5550,
                                "date": "2024-07-24T15:22:57.4463349+02:00",
                                "paymentMeans": "Card",
                                "installmentNumber": 1,
                                "state": "Authorized",
                                "meta": {
                                    "createdAt": "2024-07-24T15:22:57.4463349+02:00",
                                    "updatedAt": "2024-07-24T15:22:57.4463349+02:00"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The JWT token hasn't the privileges or Roles for this action"
                    },
                    "401": {
                        "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
                    }
                },
                "security": [
                    {
                        "User": []
                    },
                    {
                        "Client": []
                    }
                ]
            }
        },
        "/organizations/{organizationSlug}/forms/{formType}/{formSlug}/payments": {
            "get": {
                "tags": [
                    "Payments management"
                ],
                "summary": "Get information about payments made in a specific form",
                "description": "<br/><br/><b>Your token must have one of these roles : </b><br/>FormAdmin<br/>OrganizationAdmin<br/><br/>If you are an <b>association</b>, you can obtain these roles with your client.<br/>If you are a <b>partner</b>, you can obtain these roles by the authorize flow.<br/><br/><b>Your clientId must be allowed all of those privileges : </b> <br/> AccessTransactions<br/><br/>",
                "operationId": "Payments_GetFormPayments",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "organizationSlug",
                        "in": "path",
                        "description": "The organization slug",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "formSlug",
                        "in": "path",
                        "description": "The form slug",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "formType",
                        "in": "path",
                        "description": "The form type CrowdFunding, Membership, Event, Donation, PaymentForm, Checkout, Shop",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "CrowdFunding",
                            "Membership",
                            "Event",
                            "Donation",
                            "PaymentForm",
                            "Checkout",
                            "Shop"
                        ]
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "First Date Filter",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "End Date Filter",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "userSearchKey",
                        "in": "query",
                        "description": "Filter results on user or payer first name, last name or email",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pageIndex",
                        "in": "query",
                        "description": "The page of results to retrieve",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 1
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 20
                    },
                    {
                        "name": "continuationToken",
                        "in": "query",
                        "description": "Continuation Token from which we wish to retrieve results",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "states",
                        "in": "query",
                        "description": "Filter results by states of payments",
                        "required": false,
                        "items": {},
                        "collectionFormat": "multi",
                        "type": "array"
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "Sort payments by ascending or descending order. Default is descending",
                        "required": false,
                        "type": "string",
                        "default": "Desc",
                        "enum": [
                            "Asc",
                            "Desc"
                        ]
                    },
                    {
                        "name": "sortField",
                        "in": "query",
                        "description": "Sort payments by a specific field (Date or UpdateDate). Default is date",
                        "required": false,
                        "type": "string",
                        "default": "Date",
                        "enum": [
                            "Date",
                            "UpdateDate",
                            "CreationDate"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "You can override the JWT used fo authorization here. ie : Bearer JWT_TOKEN",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get form payments",
                        "schema": {
                            "$ref": "#/definitions/HelloAsso.Api.V5.Models.Common.ResultsWithPaginationModelOfHelloAsso.Api.V5.Models.Statistics.Payment"
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "order": {
                                        "id": 12578,
                                        "date": "2019-12-15T17:27:02+01:00",
                                        "formSlug": "formulaire-exemple",
                                        "formType": "Event",
                                        "organizationName": "name",
                                        "organizationSlug": "association-exemple",
                                        "organizationType": "Association1901",
                                        "organizationIsUnderColucheLaw": false,
                                        "formName": "name",
                                        "meta": {
                                            "createdAt": "2019-12-15T17:27:02+01:00",
                                            "updatedAt": "2019-12-15T17:27:02+01:00"
                                        },
                                        "isAnonymous": false,
                                        "isAmountHidden": false
                                    },
                                    "payer": {
                                        "email": "john.doe@test.com",
                                        "address": "23 rue du palmier",
                                        "city": "Paris",
                                        "zipCode": "75000",
                                        "country": "FRA",
                                        "company": "Hello Asso",
                                        "dateOfBirth": "1986-07-06T00:00:00+02:00",
                                        "firstName": "John",
                                        "lastName": "Doe"
                                    },
                                    "items": [
                                        {
                                            "shareAmount": 11000,
                                            "shareItemAmount": 10000,
                                            "shareOptionsAmount": 1000,
                                            "id": 12578,
                                            "amount": 30000,
                                            "type": "Membership",
                                            "state": "Processed"
                                        },
                                        {
                                            "shareAmount": 1000,
                                            "shareItemAmount": 1000,
                                            "id": 12579,
                                            "amount": 1000,
                                            "type": "Donation",
                                            "state": "Processed"
                                        }
                                    ],
                                    "cashOutDate": "2020-02-15T17:27:02+01:00",
                                    "cashOutState": "CashedOut",
                                    "paymentReceiptUrl": "https://www.helloasso.com/associations/association-exemple/evenements/formulaire-exemple/paiement-attestation/12578",
                                    "fiscalReceiptUrl": "https://www.helloasso.com/get-fisc.aspx?dau=159875",
                                    "id": 159875,
                                    "amount": 11000,
                                    "date": "2019-12-15T17:27:02+01:00",
                                    "paymentMeans": "Card",
                                    "installmentNumber": 1,
                                    "state": "Authorized",
                                    "meta": {
                                        "createdAt": "2019-12-15T17:27:02+01:00",
                                        "updatedAt": "2019-12-15T17:27:02+01:00"
                                    }
                                },
                                {
                                    "order": {
                                        "id": 12578,
                                        "date": "2019-12-15T17:27:02+01:00",
                                        "formSlug": "formulaire-exemple",
                                        "formType": "Event",
                                        "organizationName": "name",
                                        "organizationSlug": "association-exemple",
                                        "organizationType": "Association1901",
                                        "organizationIsUnderColucheLaw": false,
                                        "formName": "name",
                                        "meta": {
                                            "createdAt": "2019-12-15T17:27:02+01:00",
                                            "updatedAt": "2019-12-15T17:27:02+01:00"
                                        },
                                        "isAnonymous": false,
                                        "isAmountHidden": false
                                    },
                                    "payer": {
                                        "email": "john.doe@test.com",
                                        "address": "23 rue du palmier",
                                        "city": "Paris",
                                        "zipCode": "75000",
                                        "country": "FRA",
                                        "company": "Hello Asso",
                                        "dateOfBirth": "1986-07-06T00:00:00+02:00",
                                        "firstName": "John",
                                        "lastName": "Doe"
                                    },
                                    "items": [
                                        {
                                            "shareAmount": 11000,
                                            "shareItemAmount": 10000,
                                            "shareOptionsAmount": 1000,
                                            "id": 12578,
                                            "amount": 30000,
                                            "type": "Membership",
                                            "state": "Processed"
                                        },
                                        {
                                            "shareAmount": 1000,
                                            "shareItemAmount": 1000,
                                            "id": 12579,
                                            "amount": 1000,
                                            "type": "Donation",
                                            "state": "Processed"
                                        }
                                    ],
                                    "cashOutState": "Transfered",
                                    "paymentReceiptUrl": "https://www.helloasso.com/associations/association-exemple/evenements/formulaire-exemple/paiement-attestation/12578",
                                    "fiscalReceiptUrl": "https://www.helloasso.com/get-fisc.aspx?dau=159876",
                                    "id": 159876,
                                    "amount": 9000,
                                    "date": "2020-01-15T17:27:02+01:00",
                                    "paymentMeans": "Card",
                                    "installmentNumber": 1,
                                    "state": "Authorized",
                                    "meta": {
                                        "createdAt": "2020-01-15T17:27:02+01:00",
                                        "updatedAt": "2020-01-15T17:27:02+01:00"
                                    }
                                },
                                {
                                    "order": {
                                        "id": 12578,
                                        "date": "2019-12-15T17:27:02+01:00",
                                        "formSlug": "formulaire-exemple",
                                        "formType": "Event",
                                        "organizationName": "name",
                                        "organizationSlug": "association-exemple",
                                        "organizationType": "Association1901",
                                        "organizationIsUnderColucheLaw": false,
                                        "formName": "name",
                                        "meta": {
                                            "createdAt": "2019-12-15T17:27:02+01:00",
                                            "updatedAt": "2019-12-15T17:27:02+01:00"
                                        },
                                        "isAnonymous": false,
                                        "isAmountHidden": false
                                    },
                                    "payer": {
                                        "email": "john.doe@test.com",
                                        "address": "23 rue du palmier",
                                        "city": "Paris",
                                        "zipCode": "75000",
                                        "country": "FRA",
                                        "company": "Hello Asso",
                                        "dateOfBirth": "1986-07-06T00:00:00+02:00",
                                        "firstName": "John",
                                        "lastName": "Doe"
                                    },
                                    "items": [
                                        {
                                            "shareAmount": 11000,
                                            "shareItemAmount": 10000,
                                            "shareOptionsAmount": 1000,
                                            "id": 12578,
                                            "amount": 30000,
                                            "type": "Membership",
                                            "state": "Processed"
                                        },
                                        {
                                            "shareAmount": 1000,
                                            "shareItemAmount": 1000,
                                            "id": 12579,
                                            "amount": 1000,
                                            "type": "Donation",
                                            "state": "Processed"
                                        }
                                    ],
                                    "id": 159877,
                                    "amount": 9000,
                                    "date": "2020-02-15T17:27:02+01:00",
                                    "paymentMeans": "Card",
                                    "installmentNumber": 1,
                                    "state": "Pending",
                                    "meta": {
                                        "createdAt": "2020-02-15T17:27:02+01:00",
                                        "updatedAt": "2020-02-15T17:27:02+01:00"
                                    },
                                    "refundOperations": [
                                        {
                                            "id": 1,
                                            "amount": 2000,
                                            "amountTip": 200,
                                            "status": "Processed",
                                            "meta": {
                                                "createdAt": "2024-07-22T15:22:57.4619849+02:00",
                                                "updatedAt": "2024-07-23T15:22:57.4619849+02:00"
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "The JWT token hasn't the privileges or Roles for this action"
                    },
                    "401": {
                        "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
                    }
                },
                "security": [
                    {
                        "User": []
                    },
                    {
                        "Client": []
                    }
                ]
            }
        },
        "/organizations/{organizationSlug}/payments": {
            "get": {
                "tags": [
                    "Payments management"
                ],
                "summary": "Get information about payments made to a specific organization",
                "description": "Return list of payments according to parameters<br/><br/><b>Your token must have one of these roles : </b><br/>OrganizationAdmin<br/><br/>If you are an <b>association</b>, you can obtain these roles with your client.<br/>If you are a <b>partner</b>, you can obtain these roles by the authorize flow.<br/><br/><b>Your clientId must be allowed all of those privileges : </b> <br/> AccessTransactions<br/><br/>",
                "operationId": "Payments_GetOrganizationPayments",
                "consumes": [],
                "produces": [
                    "application/json",
                    "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                    "text/csv"
                ],
                "parameters": [
                    {
                        "name": "organizationSlug",
                        "in": "path",
                        "description": "The organization Slug",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "First Date Filter",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "End Date Filter",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "userSearchKey",
                        "in": "query",
                        "description": "Filter results on user or payer first name, last name or email",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pageIndex",
                        "in": "query",
                        "description": "The page of results to retrieve",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 1
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 20
                    },
                    {
                        "name": "continuationToken",
                        "in": "query",
                        "description": "Continuation Token from which we wish to retrieve results",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "states",
                        "in": "query",
                        "description": "The payment states",
                        "required": false,
                        "items": {},
                        "collectionFormat": "multi",
                        "type": "array"
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "Sort payments by ascending or descending order. Default is descending",
                        "required": false,
                        "type": "string",
                        "default": "Desc",
                        "enum": [
                            "Asc",
                            "Desc"
                        ]
                    },
                    {
                        "name": "sortField",
                        "in": "query",
                        "description": "Sort payments by a specific field (Date or UpdateDate). Default is date",
                        "required": false,
                        "type": "string",
                        "default": "Date",
                        "enum": [
                            "Date",
                            "UpdateDate",
                            "CreationDate"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "You can override the JWT used fo authorization here. ie : Bearer JWT_TOKEN",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get organization payments",
                        "schema": {
                            "$ref": "#/definitions/HelloAsso.Api.V5.Models.Common.ResultsWithPaginationModelOfHelloAsso.Api.V5.Models.Statistics.Payment"
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "order": {
                                        "id": 12578,
                                        "date": "2019-12-15T17:27:02+01:00",
                                        "formSlug": "formulaire-exemple",
                                        "formType": "Event",
                                        "organizationName": "name",
                                        "organizationSlug": "association-exemple",
                                        "organizationType": "Association1901",
                                        "organizationIsUnderColucheLaw": false,
                                        "formName": "name",
                                        "meta": {
                                            "createdAt": "2019-12-15T17:27:02+01:00",
                                            "updatedAt": "2019-12-15T17:27:02+01:00"
                                        },
                                        "isAnonymous": false,
                                        "isAmountHidden": false
                                    },
                                    "payer": {
                                        "email": "john.doe@test.com",
                                        "address": "23 rue du palmier",
                                        "city": "Paris",
                                        "zipCode": "75000",
                                        "country": "FRA",
                                        "company": "Hello Asso",
                                        "dateOfBirth": "1986-07-06T00:00:00+02:00",
                                        "firstName": "John",
                                        "lastName": "Doe"
                                    },
                                    "items": [
                                        {
                                            "shareAmount": 11000,
                                            "shareItemAmount": 10000,
                                            "shareOptionsAmount": 1000,
                                            "id": 12578,
                                            "amount": 30000,
                                            "type": "Membership",
                                            "state": "Processed"
                                        },
                                        {
                                            "shareAmount": 1000,
                                            "shareItemAmount": 1000,
                                            "id": 12579,
                                            "amount": 1000,
                                            "type": "Donation",
                                            "state": "Processed"
                                        }
                                    ],
                                    "cashOutDate": "2020-02-15T17:27:02+01:00",
                                    "cashOutState": "CashedOut",
                                    "paymentReceiptUrl": "https://www.helloasso.com/associations/association-exemple/evenements/formulaire-exemple/paiement-attestation/12578",
                                    "fiscalReceiptUrl": "https://www.helloasso.com/get-fisc.aspx?dau=159875",
                                    "id": 159875,
                                    "amount": 11000,
                                    "date": "2019-12-15T17:27:02+01:00",
                                    "paymentMeans": "Card",
                                    "installmentNumber": 1,
                                    "state": "Authorized",
                                    "meta": {
                                        "createdAt": "2019-12-15T17:27:02+01:00",
                                        "updatedAt": "2019-12-15T17:27:02+01:00"
                                    }
                                },
                                {
                                    "order": {
                                        "id": 12578,
                                        "date": "2019-12-15T17:27:02+01:00",
                                        "formSlug": "formulaire-exemple",
                                        "formType": "Event",
                                        "organizationName": "name",
                                        "organizationSlug": "association-exemple",
                                        "organizationType": "Association1901",
                                        "organizationIsUnderColucheLaw": false,
                                        "formName": "name",
                                        "meta": {
                                            "createdAt": "2019-12-15T17:27:02+01:00",
                                            "updatedAt": "2019-12-15T17:27:02+01:00"
                                        },
                                        "isAnonymous": false,
                                        "isAmountHidden": false
                                    },
                                    "payer": {
                                        "email": "john.doe@test.com",
                                        "address": "23 rue du palmier",
                                        "city": "Paris",
                                        "zipCode": "75000",
                                        "country": "FRA",
                                        "company": "Hello Asso",
                                        "dateOfBirth": "1986-07-06T00:00:00+02:00",
                                        "firstName": "John",
                                        "lastName": "Doe"
                                    },
                                    "items": [
                                        {
                                            "shareAmount": 11000,
                                            "shareItemAmount": 10000,
                                            "shareOptionsAmount": 1000,
                                            "id": 12578,
                                            "amount": 30000,
                                            "type": "Membership",
                                            "state": "Processed"
                                        },
                                        {
                                            "shareAmount": 1000,
                                            "shareItemAmount": 1000,
                                            "id": 12579,
                                            "amount": 1000,
                                            "type": "Donation",
                                            "state": "Processed"
                                        }
                                    ],
                                    "cashOutState": "Transfered",
                                    "paymentReceiptUrl": "https://www.helloasso.com/associations/association-exemple/evenements/formulaire-exemple/paiement-attestation/12578",
                                    "fiscalReceiptUrl": "https://www.helloasso.com/get-fisc.aspx?dau=159876",
                                    "id": 159876,
                                    "amount": 9000,
                                    "date": "2020-01-15T17:27:02+01:00",
                                    "paymentMeans": "Card",
                                    "installmentNumber": 1,
                                    "state": "Authorized",
                                    "meta": {
                                        "createdAt": "2020-01-15T17:27:02+01:00",
                                        "updatedAt": "2020-01-15T17:27:02+01:00"
                                    }
                                },
                                {
                                    "order": {
                                        "id": 12578,
                                        "date": "2019-12-15T17:27:02+01:00",
                                        "formSlug": "formulaire-exemple",
                                        "formType": "Event",
                                        "organizationName": "name",
                                        "organizationSlug": "association-exemple",
                                        "organizationType": "Association1901",
                                        "organizationIsUnderColucheLaw": false,
                                        "formName": "name",
                                        "meta": {
                                            "createdAt": "2019-12-15T17:27:02+01:00",
                                            "updatedAt": "2019-12-15T17:27:02+01:00"
                                        },
                                        "isAnonymous": false,
                                        "isAmountHidden": false
                                    },
                                    "payer": {
                                        "email": "john.doe@test.com",
                                        "address": "23 rue du palmier",
                                        "city": "Paris",
                                        "zipCode": "75000",
                                        "country": "FRA",
                                        "company": "Hello Asso",
                                        "dateOfBirth": "1986-07-06T00:00:00+02:00",
                                        "firstName": "John",
                                        "lastName": "Doe"
                                    },
                                    "items": [
                                        {
                                            "shareAmount": 11000,
                                            "shareItemAmount": 10000,
                                            "shareOptionsAmount": 1000,
                                            "id": 12578,
                                            "amount": 30000,
                                            "type": "Membership",
                                            "state": "Processed"
                                        },
                                        {
                                            "shareAmount": 1000,
                                            "shareItemAmount": 1000,
                                            "id": 12579,
                                            "amount": 1000,
                                            "type": "Donation",
                                            "state": "Processed"
                                        }
                                    ],
                                    "id": 159877,
                                    "amount": 9000,
                                    "date": "2020-02-15T17:27:02+01:00",
                                    "paymentMeans": "Card",
                                    "installmentNumber": 1,
                                    "state": "Pending",
                                    "meta": {
                                        "createdAt": "2020-02-15T17:27:02+01:00",
                                        "updatedAt": "2020-02-15T17:27:02+01:00"
                                    },
                                    "refundOperations": [
                                        {
                                            "id": 1,
                                            "amount": 2000,
                                            "amountTip": 200,
                                            "status": "Processed",
                                            "meta": {
                                                "createdAt": "2024-07-22T15:22:57.4619849+02:00",
                                                "updatedAt": "2024-07-23T15:22:57.4619849+02:00"
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "The JWT token hasn't the privileges or Roles for this action"
                    },
                    "401": {
                        "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
                    }
                },
                "security": [
                    {
                        "User": []
                    },
                    {
                        "Client": []
                    }
                ]
            }
        },
        "/payments/{paymentId}/refund": {
            "post": {
                "tags": [
                    "Payments management"
                ],
                "summary": "Refund a payment.",
                "description": "<br/><br/><b>Your token must have one of these roles : </b><br/>OrganizationAdmin<br/>FormAdmin<br/><br/>If you are an <b>association</b>, you can obtain these roles with your client.<br/>If you are a <b>partner</b>, you can obtain these roles by the authorize flow.<br/><br/><b>Your clientId must be allowed all of those privileges : </b> <br/> RefundManagement<br/><br/>",
                "operationId": "Payments_PostRefundPayment",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "paymentId",
                        "in": "path",
                        "description": "The payment identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "comment",
                        "in": "query",
                        "description": "The comment about this refund.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "cancelOrder",
                        "in": "query",
                        "description": "Whether the future payments and linked items of this order must be canceled (possible only if the payment is fully refunded)",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "sendRefundMail",
                        "in": "query",
                        "description": "Whether a refund mail must be send or not.",
                        "required": false,
                        "type": "boolean",
                        "default": true
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "description": "The amount in euros to refund. Enter this amount only for a partial refund for stripe. If not filled in then the entire payment is refunded",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "You can override the JWT used fo authorization here. ie : Bearer JWT_TOKEN",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The refund request has been registered",
                        "schema": {
                            "$ref": "#/definitions/HelloAsso.Api.V5.Models.Payment.RefundOperationModel"
                        }
                    },
                    "403": {
                        "description": "The JWT token hasn't the privileges or Roles for this action"
                    },
                    "401": {
                        "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
                    }
                },
                "security": [
                    {
                        "User": []
                    },
                    {
                        "Client": []
                    }
                ]
            }
        },
        "/organizations/{organizationSlug}/payments/search": {
            "get": {
                "tags": [
                    "Payments management"
                ],
                "summary": "Search payments.",
                "description": "Warning :\r\nThe total count is disable, we return the list of payments and the continuationToken.\r\n\r\nSearch payments based on many criteria\r\nSearch must use at least one of the following :\r\n- OrganizationId : payments made for this organization\r\n- Form : Payments made by this form using a the couple formId and formType\r\n- UserId : Payments made by this user\r\n            \r\nAnd can combine as many of those filters.\r\n- States : A list of Payment states to be filtered. None or empty means all payments will be returned\r\n- DateTime range : Using from and/or to, the datetime is inclusive\r\n- Search query : A list of words that must be contained on either payer or user names or email\r\n- Amount of the payment : In cents, that must exactly match the payments amount (with or without the contribution)\r\n            \r\nResult order is also customizable :\r\n - Order by field can be date, update_date or creation_date\r\n - Order can be asc or desc<br/><br/><b>Your token must have one of these roles : </b><br/>OrganizationAdmin<br/><br/>If you are an <b>association</b>, you can obtain these roles with your client.<br/>If you are a <b>partner</b>, you can obtain these roles by the authorize flow.<br/><br/><b>Your clientId must be allowed all of those privileges : </b> <br/> AccessTransactions<br/><br/>",
                "operationId": "Payments_GetPayments",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "organizationSlug",
                        "in": "path",
                        "description": "The organization slug",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "First Date Filter",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "End Date Filter",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items to retrieve",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 20
                    },
                    {
                        "name": "continuationToken",
                        "in": "query",
                        "description": "Continuation Token from which we wish to retrieve results",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "formTypes",
                        "in": "query",
                        "description": "The form type CrowdFunding, Membership, Event, Donation, PaymentForm, Checkout, Shop",
                        "required": false,
                        "items": {},
                        "collectionFormat": "multi",
                        "type": "array"
                    },
                    {
                        "name": "formType",
                        "in": "query",
                        "description": "The form type CrowdFunding, Membership, Event, Donation, PaymentForm, Checkout, Shop. This parameter must be used with the parameter {formId}.",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "CrowdFunding",
                            "Membership",
                            "Event",
                            "Donation",
                            "PaymentForm",
                            "Checkout",
                            "Shop"
                        ]
                    },
                    {
                        "name": "states",
                        "in": "query",
                        "description": "Filter results by states of payments",
                        "required": false,
                        "items": {},
                        "collectionFormat": "multi",
                        "type": "array"
                    },
                    {
                        "name": "userId",
                        "in": "query",
                        "description": "The User identifier",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "searchKey",
                        "in": "query",
                        "description": "Filter results on user or payer first name, last name or email.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "description": "Amount of the payment in cents. Filter payments with exact amount with or without the contribution.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "Sort payments by ascending or descending order. Default is descending",
                        "required": false,
                        "type": "string",
                        "default": "Desc",
                        "enum": [
                            "Asc",
                            "Desc"
                        ]
                    },
                    {
                        "name": "sortField",
                        "in": "query",
                        "description": "Sort payments by a specific field (Date or UpdateDate). Default is date",
                        "required": false,
                        "type": "string",
                        "default": "Date",
                        "enum": [
                            "Date",
                            "UpdateDate",
                            "CreationDate"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "You can override the JWT used fo authorization here. ie : Bearer JWT_TOKEN",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get organization payments search",
                        "schema": {
                            "$ref": "#/definitions/HelloAsso.Api.V5.Models.Common.ResultsWithPaginationModelOfHelloAsso.Api.V5.Models.Payment.PublicPaymentModel"
                        }
                    },
                    "403": {
                        "description": "The JWT token hasn't the privileges or Roles for this action"
                    },
                    "401": {
                        "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
                    }
                },
                "security": [
                    {
                        "User": []
                    },
                    {
                        "Client": []
                    }
                ]
            }
        },
        "/tags/{tagName}": {
            "get": {
                "tags": [
                    "Tags"
                ],
                "summary": "Get Internal Tag Detail",
                "description": "<br/><br/><b>Your clientId must be allowed all of those privileges : </b> <br/> FormOpenDirectory<br/><br/>",
                "operationId": "Tag_GetTag",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "tagName",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "withCount",
                        "in": "query",
                        "description": "If true : Count of times Tag is used",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "withAmount",
                        "in": "query",
                        "description": "If true : Amount collected by all forms linked to this Tag",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "You can override the JWT used fo authorization here. ie : Bearer JWT_TOKEN",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get tags Detail",
                        "schema": {
                            "$ref": "#/definitions/HelloAsso.Api.V5.Models.Tags.InternalTagModel"
                        }
                    },
                    "403": {
                        "description": "The JWT token hasn't the privileges or Roles for this action"
                    },
                    "401": {
                        "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
                    }
                },
                "security": [
                    {
                        "User": []
                    },
                    {
                        "Client": []
                    }
                ]
            }
        },
        "/users/me/organizations": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get my organizations",
                "description": "Returns the list of organizations where the connected user has rights ( Form or Organization itself )<br/><br/><b>Your clientId must be allowed all of those privileges : </b> <br/> AccessPublicData<br/><br/>",
                "operationId": "Users_GetOrganizations",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "You can override the JWT used fo authorization here. ie : Bearer JWT_TOKEN",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get organizations for user",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/HelloAsso.Api.V5.Models.Organization.OrganizationLightModel"
                            },
                            "xml": {
                                "name": "OrganizationLightModel",
                                "wrapped": true
                            },
                            "type": "array"
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "logo": "https://cdn.helloasso.com/img/logos/association logo example.jpg",
                                    "name": "Association Exemple",
                                    "role": "OrganizationAdmin",
                                    "city": "Paris",
                                    "zipCode": "75000",
                                    "description": "Ceci est un modÃ¨le d'association exemple.",
                                    "updateDate": "2024-07-24T15:22:57.4961448+02:00",
                                    "url": "https://www.helloasso.com/associations/association-exemple",
                                    "organizationSlug": "association-exemple"
                                },
                                {
                                    "logo": "https://cdn.helloasso.com/img/logos/logo.png",
                                    "name": "Autre Association Exemple",
                                    "role": "FormAdmin",
                                    "city": "Bordeaux",
                                    "zipCode": "33000",
                                    "description": "Description de mon association",
                                    "updateDate": "2024-07-24T15:22:57.4961448+02:00",
                                    "url": "https://www.helloasso.com/associations/autre-association-exemple",
                                    "organizationSlug": "autre-association-exemple"
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "The JWT token hasn't the privileges or Roles for this action"
                    },
                    "401": {
                        "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
                    }
                },
                "security": [
                    {
                        "User": []
                    },
                    {
                        "Client": []
                    }
                ]
            }
        },
        "/values/organization/categories": {
            "get": {
                "tags": [
                    "Values definitions"
                ],
                "summary": "Get list of JO categories",
                "description": "Use this in order to build your category list of organization<br/><br/><b>Your clientId must be allowed all of those privileges : </b> <br/> AccessPublicData<br/><br/>",
                "operationId": "Values_GetCategories",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "You can override the JWT used fo authorization here. ie : Bearer JWT_TOKEN",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of organization categories",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/HelloAsso.Api.V5.Models.Account.OrganismCategoryModel"
                            },
                            "xml": {
                                "name": "OrganismCategoryModel",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "The JWT token hasn't the privileges or Roles for this action"
                    },
                    "401": {
                        "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
                    }
                },
                "security": [
                    {
                        "User": []
                    },
                    {
                        "Client": []
                    }
                ]
            }
        },
        "/values/tags": {
            "get": {
                "tags": [
                    "Values definitions"
                ],
                "summary": "Get list of public tags",
                "description": "Use this in order to get list of used tags<br/><br/><b>Your clientId must be allowed all of those privileges : </b> <br/> AccessPublicData<br/><br/>",
                "operationId": "Values_GetPublicTags",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "You can override the JWT used fo authorization here. ie : Bearer JWT_TOKEN",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of tags",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/HelloAsso.Api.V5.Models.Tags.PublicTagModel"
                            },
                            "xml": {
                                "name": "PublicTagModel",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "The JWT token hasn't the privileges or Roles for this action"
                    },
                    "401": {
                        "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
                    }
                },
                "security": [
                    {
                        "User": []
                    },
                    {
                        "Client": []
                    }
                ]
            }
        },
        "/values/company-legal-status": {
            "get": {
                "tags": [
                    "Values definitions"
                ],
                "summary": "Get company legal status list",
                "description": "<br/><br/><b>Your clientId must be allowed all of those privileges : </b> <br/> AccessPublicData<br/><br/>",
                "operationId": "Values_GetCompanyLegalStatus",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "You can override the JWT used fo authorization here. ie : Bearer JWT_TOKEN",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Company legal status list",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/HelloAsso.Api.V5.Models.Account.CompanyLegalStatusModel"
                            },
                            "xml": {
                                "name": "CompanyLegalStatusModel",
                                "wrapped": true
                            },
                            "type": "array"
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "id": 0,
                                    "label": "Organisme de placement collectif en valeurs mobiliÃ¨res sans personnalitÃ© morale"
                                },
                                {
                                    "id": 85,
                                    "label": "Organisme de retraite Ã  adhÃ©sion non obligatoire"
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "The JWT token hasn't the privileges or Roles for this action"
                    },
                    "401": {
                        "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
                    }
                },
                "security": [
                    {
                        "User": []
                    },
                    {
                        "Client": []
                    }
                ]
            }
        }
    },
    "definitions": {
        "HelloAsso.Api.V5.Models.Carts.CheckoutIntentResponse": {
            "properties": {
                "metadata": {
                    "type": "object"
                },
                "order": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Statistics.OrderDetail"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "redirectUrl": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "CheckoutIntentResponse"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Enums.FormType": {
            "type": "string",
            "enum": [
                "CrowdFunding",
                "Membership",
                "Event",
                "Donation",
                "PaymentForm",
                "Checkout",
                "Shop"
            ]
        },
        "HelloAsso.Api.V5.Models.Enums.OrganizationType": {
            "type": "string",
            "enum": [
                "Association1901Rig",
                "Association1901Rup",
                "Association1901",
                "FondationRup",
                "FondDotation",
                "FondationSousEgide",
                "FondationScientifique",
                "FondationPartenariale",
                "FondationUniversitaire",
                "FondationHospitaliere",
                "Association1905",
                "Association1905Rup",
                "Entreprise",
                "Cooperative",
                "Etablissement",
                "Association1908",
                "Association1908Rig",
                "Association1908Rup",
                "AssociationMilitaire",
                "AssociationProprietaire",
                "CollectivitÃ©s",
                "ComiteEntreprise",
                "CSE",
                "FabriqueEglise",
                "FondsPerenite",
                "GIE",
                "GIP",
                "MenseCuriale",
                "SCIC",
                "SCOP",
                "Autres"
            ]
        },
        "HelloAsso.Api.V5.Models.Statistics.OrderDetail": {
            "properties": {
                "payer": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Statistics.Payer"
                },
                "items": {
                    "items": {
                        "$ref": "#/definitions/HelloAsso.Api.V5.Models.Statistics.OrderItem"
                    },
                    "xml": {
                        "name": "OrderItem",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "payments": {
                    "items": {
                        "$ref": "#/definitions/HelloAsso.Api.V5.Models.Statistics.OrderPayment"
                    },
                    "xml": {
                        "name": "OrderPayment",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "amount": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Statistics.OrderAmountModel"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                },
                "formSlug": {
                    "type": "string"
                },
                "formType": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.FormType"
                },
                "organizationName": {
                    "type": "string"
                },
                "organizationSlug": {
                    "type": "string"
                },
                "organizationType": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.OrganizationType"
                },
                "organizationIsUnderColucheLaw": {
                    "type": "boolean"
                },
                "checkoutIntentId": {
                    "type": "integer",
                    "format": "int32"
                },
                "meta": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Common.MetaModel"
                }
            },
            "xml": {
                "name": "OrderDetail"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Statistics.Payer": {
            "properties": {
                "email": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "zipCode": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "company": {
                    "type": "string"
                },
                "dateOfBirth": {
                    "type": "string",
                    "format": "date-time"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "Payer"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Enums.PriceCategory": {
            "type": "string",
            "enum": [
                "Fixed",
                "Pwyw",
                "Free"
            ]
        },
        "HelloAsso.Api.V5.Models.Enums.TierType": {
            "type": "string",
            "enum": [
                "Donation",
                "Payment",
                "Registration",
                "Membership",
                "MonthlyDonation",
                "MonthlyPayment",
                "OfflineDonation",
                "Contribution",
                "Bonus",
                "Product"
            ]
        },
        "HelloAsso.Api.V5.Models.Enums.ItemState": {
            "type": "string",
            "enum": [
                "Processed",
                "Registered",
                "Unknown",
                "Canceled"
            ]
        },
        "HelloAsso.Api.V5.Models.Statistics.OrderItem": {
            "properties": {
                "payments": {
                    "items": {
                        "$ref": "#/definitions/HelloAsso.Api.V5.Models.Statistics.SharePayment"
                    },
                    "xml": {
                        "name": "SharePayment",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "name": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Statistics.User"
                },
                "priceCategory": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.PriceCategory"
                },
                "minAmount": {
                    "type": "integer",
                    "format": "int32"
                },
                "discount": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Statistics.ItemDiscount"
                },
                "customFields": {
                    "items": {
                        "$ref": "#/definitions/HelloAsso.Api.V5.Models.Statistics.ItemCustomField"
                    },
                    "xml": {
                        "name": "ItemCustomField",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "options": {
                    "items": {
                        "$ref": "#/definitions/HelloAsso.Api.V5.Models.Statistics.ItemOption"
                    },
                    "xml": {
                        "name": "ItemOption",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "ticketUrl": {
                    "type": "string"
                },
                "qrCode": {
                    "type": "string"
                },
                "membershipCardUrl": {
                    "type": "string"
                },
                "dayOfLevy": {
                    "type": "integer",
                    "format": "int32"
                },
                "tierDescription": {
                    "type": "string"
                },
                "tierId": {
                    "type": "integer",
                    "format": "int32"
                },
                "comment": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.TierType"
                },
                "initialAmount": {
                    "type": "integer",
                    "format": "int32"
                },
                "state": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.ItemState"
                }
            },
            "xml": {
                "name": "OrderItem"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Enums.PaymentCashOutState": {
            "type": "string",
            "enum": [
                "MoneyIn",
                "CantTransferReceiverFull",
                "Transfered",
                "Refunded",
                "Refunding",
                "WaitingForCashOutConfirmation",
                "CashedOut",
                "Unknown",
                "Contested",
                "TransferInProgress"
            ]
        },
        "HelloAsso.Api.V5.Models.Enums.PaymentMeans": {
            "type": "string",
            "enum": [
                "None",
                "Card",
                "Check",
                "Cash",
                "BankTransfer",
                "Other"
            ]
        },
        "HelloAsso.Api.V5.Models.Enums.PaymentState": {
            "type": "string",
            "enum": [
                "Pending",
                "Authorized",
                "Refused",
                "Unknown",
                "Registered",
                "Refunded",
                "Refunding",
                "Contested"
            ]
        },
        "HelloAsso.Api.V5.Models.Enums.PaymentType": {
            "type": "string",
            "enum": [
                "Offline",
                "Credit",
                "Debit"
            ]
        },
        "HelloAsso.Api.V5.Models.Statistics.OrderPayment": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/HelloAsso.Api.V5.Models.Statistics.ShareItem"
                    },
                    "xml": {
                        "name": "ShareItem",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "cashOutDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "cashOutState": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.PaymentCashOutState"
                },
                "paymentReceiptUrl": {
                    "type": "string"
                },
                "fiscalReceiptUrl": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "amountTip": {
                    "type": "integer",
                    "format": "int32"
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                },
                "paymentMeans": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.PaymentMeans"
                },
                "installmentNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "state": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.PaymentState"
                },
                "type": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.PaymentType"
                },
                "meta": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Common.MetaModel"
                },
                "paymentOffLineMean": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.PaymentMeans"
                },
                "refundOperations": {
                    "items": {
                        "$ref": "#/definitions/HelloAsso.Api.V5.Models.Statistics.RefundOperationLightModel"
                    },
                    "xml": {
                        "name": "RefundOperationLightModel",
                        "wrapped": true
                    },
                    "type": "array"
                }
            },
            "xml": {
                "name": "OrderPayment"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Statistics.OrderAmountModel": {
            "properties": {
                "total": {
                    "type": "integer",
                    "format": "int32"
                },
                "vat": {
                    "type": "integer",
                    "format": "int32"
                },
                "discount": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "xml": {
                "name": "OrderAmountModel"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Common.MetaModel": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "xml": {
                "name": "MetaModel"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Statistics.SharePayment": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "shareAmount": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "xml": {
                "name": "SharePayment"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Statistics.User": {
            "properties": {
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "User"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Statistics.ItemDiscount": {
            "properties": {
                "code": {
                    "type": "string"
                },
                "amount": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "xml": {
                "name": "ItemDiscount"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Enums.FieldType": {
            "type": "string",
            "enum": [
                "Date",
                "TextInput",
                "FreeText",
                "ChoiceList",
                "File",
                "YesNo",
                "Phone",
                "Zipcode",
                "Number"
            ]
        },
        "HelloAsso.Api.V5.Models.Statistics.ItemCustomField": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.FieldType"
                },
                "answer": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "ItemCustomField"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Statistics.ItemOption": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "priceCategory": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.PriceCategory"
                },
                "isRequired": {
                    "type": "boolean"
                },
                "customFields": {
                    "items": {
                        "$ref": "#/definitions/HelloAsso.Api.V5.Models.Statistics.ItemCustomField"
                    },
                    "xml": {
                        "name": "ItemCustomField",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "optionId": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "xml": {
                "name": "ItemOption"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Statistics.ShareItem": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "shareAmount": {
                    "type": "integer",
                    "format": "int32"
                },
                "shareItemAmount": {
                    "type": "integer",
                    "format": "int32"
                },
                "shareOptionsAmount": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "xml": {
                "name": "ShareItem"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Enums.OperationState": {
            "type": "string",
            "enum": [
                "Unknown",
                "Init",
                "Processing",
                "Processed",
                "Error",
                "InternalError",
                "Refused",
                "Aborted",
                "Canceled"
            ]
        },
        "HelloAsso.Api.V5.Models.Statistics.RefundOperationLightModel": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "amountTip": {
                    "type": "integer",
                    "format": "int32"
                },
                "status": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.OperationState"
                },
                "meta": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Common.MetaModel"
                }
            },
            "xml": {
                "name": "RefundOperationLightModel"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Carts.InitCheckoutBody": {
            "required": [
                "totalAmount",
                "initialAmount",
                "itemName",
                "backUrl",
                "errorUrl",
                "returnUrl",
                "containsDonation"
            ],
            "properties": {
                "totalAmount": {
                    "type": "integer",
                    "format": "int32"
                },
                "initialAmount": {
                    "type": "integer",
                    "format": "int32"
                },
                "itemName": {
                    "type": "string",
                    "maxLength": 250
                },
                "backUrl": {
                    "type": "string"
                },
                "errorUrl": {
                    "type": "string"
                },
                "returnUrl": {
                    "type": "string"
                },
                "containsDonation": {
                    "type": "boolean"
                },
                "terms": {
                    "items": {
                        "$ref": "#/definitions/HelloAsso.Api.V5.Models.Carts.CheckoutTerm"
                    },
                    "xml": {
                        "name": "CheckoutTerm",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "payer": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Carts.CheckoutPayer"
                },
                "metadata": {
                    "type": "object"
                }
            },
            "xml": {
                "name": "InitCheckoutBody"
            },
            "example": {
                "totalAmount": 7000,
                "initialAmount": 3000,
                "itemName": "Adhesion Football",
                "backUrl": "https://www.partnertest.com/cancel.php",
                "errorUrl": "https://www.partnertest.com/error.php",
                "returnUrl": "https://www.partnertest.com/return.php",
                "containsDonation": true,
                "terms": [
                    {
                        "amount": 2000,
                        "date": "2024-08-24T00:00:00+02:00"
                    },
                    {
                        "amount": 2000,
                        "date": "2024-09-24T00:00:00+02:00"
                    }
                ],
                "payer": {
                    "firstName": "John",
                    "lastName": "Doe",
                    "email": "john.doe@test.com",
                    "dateOfBirth": "1986-07-06T00:00:00+02:00",
                    "address": "23 rue du palmier",
                    "city": "Paris",
                    "zipCode": "75000",
                    "country": "FRA",
                    "companyName": "Hello Asso"
                },
                "metadata": {
                    "reference": 12345,
                    "libelle": "Adhesion Football",
                    "userId": 98765,
                    "produits": [
                        {
                            "id": 56,
                            "count": 1
                        },
                        {
                            "id": 78,
                            "count": 3
                        }
                    ]
                }
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Carts.CheckoutTerm": {
            "required": [
                "amount",
                "date"
            ],
            "properties": {
                "amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "xml": {
                "name": "CheckoutTerm"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Carts.CheckoutPayer": {
            "properties": {
                "firstName": {
                    "type": "string",
                    "maxLength": 255
                },
                "lastName": {
                    "type": "string",
                    "maxLength": 255
                },
                "email": {
                    "type": "string",
                    "maxLength": 255
                },
                "dateOfBirth": {
                    "type": "string",
                    "format": "date-time"
                },
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "zipCode": {
                    "type": "string"
                },
                "country": {
                    "type": "string",
                    "maxLength": 3,
                    "minLength": 3
                },
                "companyName": {
                    "type": "string",
                    "maxLength": 255
                }
            },
            "xml": {
                "name": "CheckoutPayer"
            },
            "type": "object"
        },
        "System.Threading.CancellationToken": {
            "properties": {
                "isCancellationRequested": {
                    "readOnly": true,
                    "type": "boolean"
                },
                "canBeCanceled": {
                    "readOnly": true,
                    "type": "boolean"
                },
                "waitHandle": {
                    "$ref": "#/definitions/System.Threading.WaitHandle",
                    "readOnly": true
                }
            },
            "xml": {
                "name": "CancellationToken"
            },
            "type": "object"
        },
        "System.Threading.WaitHandle": {
            "properties": {
                "handle": {
                    "type": "object"
                },
                "safeWaitHandle": {
                    "$ref": "#/definitions/Microsoft.Win32.SafeHandles.SafeWaitHandle"
                }
            },
            "xml": {
                "name": "WaitHandle"
            },
            "type": "object"
        },
        "Microsoft.Win32.SafeHandles.SafeWaitHandle": {
            "properties": {
                "isInvalid": {
                    "readOnly": true,
                    "type": "boolean"
                },
                "isClosed": {
                    "readOnly": true,
                    "type": "boolean"
                }
            },
            "xml": {
                "name": "SafeWaitHandle"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Carts.InitCheckoutResponse": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "redirectUrl": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "InitCheckoutResponse"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Directory.ListFormsRequest": {
            "properties": {
                "formName": {
                    "type": "string"
                },
                "formDescription": {
                    "type": "string"
                },
                "formZipCodes": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "formCities": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "formRegions": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "formDepartments": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "formCountries": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "formTypes": {
                    "items": {
                        "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.FormType"
                    },
                    "xml": {
                        "name": "FormType",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "formActivityType": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "formPublicationStartDateMin": {
                    "type": "string",
                    "format": "date-time"
                },
                "formPublicationStartDateMax": {
                    "type": "string",
                    "format": "date-time"
                },
                "formStartDateMin": {
                    "type": "string",
                    "format": "date-time"
                },
                "formStartDateMax": {
                    "type": "string",
                    "format": "date-time"
                },
                "formEndDateMax": {
                    "type": "string",
                    "format": "date-time"
                },
                "formEndDateMin": {
                    "type": "string",
                    "format": "date-time"
                },
                "formIsFree": {
                    "type": "boolean"
                },
                "formHasRemainingEntries": {
                    "type": "boolean"
                },
                "formInternalTags": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "formPublicTags": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "organizationName": {
                    "type": "string"
                },
                "organizationDescription": {
                    "type": "string"
                },
                "organizationCategories": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "organizationTypes": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "organizationZipCodes": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "organizationCities": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "organizationRegions": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "organizationDepartments": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "organizationFiscalReceiptEligibility": {
                    "type": "boolean"
                },
                "organizationLinkedPartners": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "xml": {
                "name": "ListFormsRequest"
            },
            "example": {
                "formZipCodes": [
                    "33000",
                    "33100"
                ],
                "formActivityType": [
                    "Danse",
                    "Football"
                ],
                "formStartDateMin": "2021-08-22T02:00:00+02:00",
                "formHasRemainingEntries": true,
                "organizationFiscalReceiptEligibility": true
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Common.ResultsWithPaginationModelOfHelloAsso.Api.V5.Models.Directory.SynchronizableFormModel": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/HelloAsso.Api.V5.Models.Directory.SynchronizableFormModel"
                    },
                    "xml": {
                        "name": "SynchronizableFormModel",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "pagination": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Common.PaginationModel"
                }
            },
            "xml": {
                "name": "ResultsWithPaginationModel`1"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Enums.RecordActionType": {
            "type": "string",
            "enum": [
                "Insert",
                "Delete"
            ]
        },
        "HelloAsso.Api.V5.Models.Directory.SynchronizableFormModel": {
            "properties": {
                "action": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.RecordActionType"
                },
                "record": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Forms.FormBasicModel"
                }
            },
            "xml": {
                "name": "SynchronizableFormModel"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Common.PaginationModel": {
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "totalCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "totalPages": {
                    "type": "integer",
                    "format": "int32"
                },
                "continuationToken": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "PaginationModel"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Forms.FormBasicModel": {
            "properties": {
                "formSlug": {
                    "type": "string"
                },
                "formType": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.FormType"
                },
                "url": {
                    "type": "string"
                },
                "organizationSlug": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "FormBasicModel"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Directory.ListOrganizationsRequest": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "categories": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "types": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "zipCodes": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "cities": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "regions": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "departments": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "fiscalReceiptEligibility": {
                    "type": "boolean"
                },
                "internalTags": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "tags": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "linkedPartners": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "xml": {
                "name": "ListOrganizationsRequest"
            },
            "example": {
                "zipCodes": [
                    "33000",
                    "33100"
                ],
                "fiscalReceiptEligibility": true
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Common.ResultsWithPaginationModelOfHelloAsso.Api.V5.Models.Directory.SynchronizableOrganizationModel": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/HelloAsso.Api.V5.Models.Directory.SynchronizableOrganizationModel"
                    },
                    "xml": {
                        "name": "SynchronizableOrganizationModel",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "pagination": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Common.PaginationModel"
                }
            },
            "xml": {
                "name": "ResultsWithPaginationModel`1"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Directory.SynchronizableOrganizationModel": {
            "properties": {
                "action": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.RecordActionType"
                },
                "record": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Organization.OrganizationBasicModel"
                }
            },
            "xml": {
                "name": "SynchronizableOrganizationModel"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Organization.OrganizationBasicModel": {
            "properties": {
                "url": {
                    "type": "string"
                },
                "organizationSlug": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "OrganizationBasicModel"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Enums.MembershipValidityType": {
            "type": "string",
            "enum": [
                "MovingYear",
                "Custom",
                "Illimited"
            ]
        },
        "HelloAsso.Api.V5.Models.Forms.FormQuickCreateRequest": {
            "required": [
                "title"
            ],
            "properties": {
                "tierList": {
                    "items": {
                        "$ref": "#/definitions/HelloAsso.Api.V5.Models.Forms.TierLightModel"
                    },
                    "xml": {
                        "name": "TierLightModel",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "banner": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "logo": {
                    "type": "string"
                },
                "privateTitle": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "title": {
                    "type": "string"
                },
                "activityTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "place": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Common.PlaceModel"
                },
                "saleEndDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "saleStartDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "validityType": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.MembershipValidityType"
                },
                "acceptOpenDonation": {
                    "type": "boolean"
                },
                "allowComment": {
                    "type": "boolean"
                },
                "amountVisible": {
                    "type": "boolean"
                },
                "color": {
                    "type": "string"
                },
                "widgetButtonText": {
                    "type": "string"
                },
                "contact": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Common.ContactModel"
                },
                "displayContributorName": {
                    "type": "boolean"
                },
                "displayParticipantsCount": {
                    "type": "boolean"
                },
                "displayRemainingEntries": {
                    "type": "boolean"
                },
                "financialGoal": {
                    "type": "integer",
                    "format": "int64"
                },
                "generateMembershipCards": {
                    "type": "boolean"
                },
                "generateTickets": {
                    "type": "boolean"
                },
                "invertDescriptions": {
                    "type": "boolean"
                },
                "labelConditionsAndTermsFile": {
                    "type": "string"
                },
                "longDescription": {
                    "type": "string"
                },
                "openDonationPresetAmounts": {
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "type": "array"
                },
                "personalizedMessage": {
                    "type": "string"
                },
                "projectBeneficiaries": {
                    "type": "string"
                },
                "projectExpensesDetails": {
                    "type": "string"
                },
                "projectOwners": {
                    "type": "string"
                },
                "projectTargetCountry": {
                    "type": "string",
                    "maxLength": 3,
                    "minLength": 3
                },
                "maxEntries": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "xml": {
                "name": "FormQuickCreateRequest"
            },
            "example": {
                "tierList": [
                    {
                        "label": "tarif 1",
                        "price": 1000
                    },
                    {
                        "label": "tarif 2",
                        "price": 2000
                    }
                ],
                "description": "description",
                "title": "event name",
                "activityTypeId": 1,
                "place": {
                    "address": "1 rue paris",
                    "name": "address name",
                    "city": "bordeaux",
                    "zipCode": "33000",
                    "country": "france"
                },
                "acceptOpenDonation": true,
                "allowComment": false,
                "amountVisible": false,
                "displayContributorName": false,
                "displayParticipantsCount": false,
                "displayRemainingEntries": false,
                "generateMembershipCards": true,
                "generateTickets": true,
                "invertDescriptions": false
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Forms.TierLightModel": {
            "properties": {
                "label": {
                    "type": "string"
                },
                "price": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "xml": {
                "name": "TierLightModel"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Common.PlaceModel": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "zipCode": {
                    "type": "string"
                },
                "country": {
                    "type": "string",
                    "maxLength": 3,
                    "minLength": 3
                },
                "geoLocation": {
                    "$ref": "#/definitions/HelloAsso.Models.Shared.GeoLocation"
                }
            },
            "xml": {
                "name": "PlaceModel"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Common.ContactModel": {
            "properties": {
                "email": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "ContactModel"
            },
            "type": "object"
        },
        "HelloAsso.Models.Shared.GeoLocation": {
            "properties": {
                "latitude": {
                    "readOnly": true,
                    "type": "number",
                    "format": "double"
                },
                "longitude": {
                    "readOnly": true,
                    "type": "number",
                    "format": "double"
                }
            },
            "xml": {
                "name": "GeoLocation"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Forms.FormQuickCreateModel": {
            "properties": {
                "formSlug": {
                    "type": "string"
                },
                "organizationSlug": {
                    "type": "string"
                },
                "publicUrl": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "FormQuickCreateModel"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Enums.FormState": {
            "type": "string",
            "enum": [
                "Public",
                "Private",
                "Draft",
                "Disabled"
            ]
        },
        "HelloAsso.Api.V5.Models.Forms.FormPublicModel": {
            "properties": {
                "organizationLogo": {
                    "type": "string"
                },
                "organizationName": {
                    "type": "string"
                },
                "tiers": {
                    "items": {
                        "$ref": "#/definitions/HelloAsso.Api.V5.Models.Forms.TierPublicModel"
                    },
                    "xml": {
                        "name": "TierPublicModel",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "activityType": {
                    "type": "string"
                },
                "activityTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "place": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Common.PlaceModel"
                },
                "saleEndDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "saleStartDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "validityType": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.MembershipValidityType"
                },
                "personalizedMessage": {
                    "type": "string"
                },
                "banner": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Common.DocumentModel"
                },
                "currency": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "logo": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Common.DocumentModel"
                },
                "meta": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Common.MetaModel"
                },
                "state": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.FormState"
                },
                "title": {
                    "type": "string"
                },
                "privateTitle": {
                    "type": "string"
                },
                "widgetButtonUrl": {
                    "type": "string"
                },
                "widgetFullUrl": {
                    "type": "string"
                },
                "widgetVignetteHorizontalUrl": {
                    "type": "string"
                },
                "widgetVignetteVerticalUrl": {
                    "type": "string"
                },
                "widgetCounterUrl": {
                    "type": "string"
                },
                "formSlug": {
                    "type": "string"
                },
                "formType": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.FormType"
                },
                "url": {
                    "type": "string"
                },
                "organizationSlug": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "FormPublicModel"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Enums.PaymentFrequencyType": {
            "type": "string",
            "enum": [
                "Single",
                "Installment",
                "Monthly"
            ]
        },
        "HelloAsso.Api.V5.Models.Forms.TierPublicModel": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "label": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "tierType": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.TierType"
                },
                "price": {
                    "type": "integer",
                    "format": "int32"
                },
                "vatRate": {
                    "type": "number",
                    "format": "double"
                },
                "minAmount": {
                    "type": "integer",
                    "format": "int32"
                },
                "paymentFrequency": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.PaymentFrequencyType"
                },
                "maxPerUser": {
                    "type": "integer",
                    "format": "int32"
                },
                "meta": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Common.MetaModel"
                },
                "saleStartDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "saleEndDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "isEligibleTaxReceipt": {
                    "type": "boolean"
                },
                "terms": {
                    "items": {
                        "$ref": "#/definitions/HelloAsso.Api.V5.Models.Forms.TermModel"
                    },
                    "xml": {
                        "name": "TermModel",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "picture": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Common.DocumentModel"
                },
                "isExcludedFromFormPaymentTerms": {
                    "type": "boolean"
                }
            },
            "xml": {
                "name": "TierPublicModel"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Common.DocumentModel": {
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                },
                "fileName": {
                    "readOnly": true,
                    "type": "string"
                },
                "publicUrl": {
                    "readOnly": true,
                    "type": "string"
                }
            },
            "xml": {
                "name": "DocumentModel"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Forms.TermModel": {
            "properties": {
                "date": {
                    "type": "string",
                    "format": "date-time"
                },
                "amount": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "xml": {
                "name": "TermModel"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Common.ResultsWithPaginationModelOfHelloAsso.Api.V5.Models.Forms.FormLightModel": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/HelloAsso.Api.V5.Models.Forms.FormLightModel"
                    },
                    "xml": {
                        "name": "FormLightModel",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "pagination": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Common.PaginationModel"
                }
            },
            "xml": {
                "name": "ResultsWithPaginationModel`1"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Forms.FormLightModel": {
            "properties": {
                "banner": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Common.DocumentModel"
                },
                "currency": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "logo": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Common.DocumentModel"
                },
                "meta": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Common.MetaModel"
                },
                "state": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.FormState"
                },
                "title": {
                    "type": "string"
                },
                "privateTitle": {
                    "type": "string"
                },
                "widgetButtonUrl": {
                    "type": "string"
                },
                "widgetFullUrl": {
                    "type": "string"
                },
                "widgetVignetteHorizontalUrl": {
                    "type": "string"
                },
                "widgetVignetteVerticalUrl": {
                    "type": "string"
                },
                "widgetCounterUrl": {
                    "type": "string"
                },
                "formSlug": {
                    "type": "string"
                },
                "formType": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.FormType"
                },
                "url": {
                    "type": "string"
                },
                "organizationSlug": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "FormLightModel"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Statistics.ItemDetail": {
            "properties": {
                "order": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Statistics.OrderLight"
                },
                "payer": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Statistics.Payer"
                },
                "payments": {
                    "items": {
                        "$ref": "#/definitions/HelloAsso.Api.V5.Models.Statistics.ItemPayment"
                    },
                    "xml": {
                        "name": "ItemPayment",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "name": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Statistics.User"
                },
                "priceCategory": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.PriceCategory"
                },
                "minAmount": {
                    "type": "integer",
                    "format": "int32"
                },
                "discount": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Statistics.ItemDiscount"
                },
                "customFields": {
                    "items": {
                        "$ref": "#/definitions/HelloAsso.Api.V5.Models.Statistics.ItemCustomField"
                    },
                    "xml": {
                        "name": "ItemCustomField",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "options": {
                    "items": {
                        "$ref": "#/definitions/HelloAsso.Api.V5.Models.Statistics.ItemOption"
                    },
                    "xml": {
                        "name": "ItemOption",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "ticketUrl": {
                    "type": "string"
                },
                "qrCode": {
                    "type": "string"
                },
                "membershipCardUrl": {
                    "type": "string"
                },
                "dayOfLevy": {
                    "type": "integer",
                    "format": "int32"
                },
                "tierDescription": {
                    "type": "string"
                },
                "tierId": {
                    "type": "integer",
                    "format": "int32"
                },
                "comment": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.TierType"
                },
                "initialAmount": {
                    "type": "integer",
                    "format": "int32"
                },
                "state": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.ItemState"
                }
            },
            "xml": {
                "name": "ItemDetail"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Statistics.OrderLight": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                },
                "formSlug": {
                    "type": "string"
                },
                "formType": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.FormType"
                },
                "organizationName": {
                    "type": "string"
                },
                "organizationSlug": {
                    "type": "string"
                },
                "organizationType": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.OrganizationType"
                },
                "organizationIsUnderColucheLaw": {
                    "type": "boolean"
                },
                "checkoutIntentId": {
                    "type": "integer",
                    "format": "int32"
                },
                "meta": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Common.MetaModel"
                }
            },
            "xml": {
                "name": "OrderLight"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Statistics.ItemPayment": {
            "properties": {
                "cashOutState": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.PaymentCashOutState"
                },
                "shareAmount": {
                    "type": "integer",
                    "format": "int32"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "amountTip": {
                    "type": "integer",
                    "format": "int32"
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                },
                "paymentMeans": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.PaymentMeans"
                },
                "installmentNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "state": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.PaymentState"
                },
                "type": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.PaymentType"
                },
                "meta": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Common.MetaModel"
                },
                "paymentOffLineMean": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.PaymentMeans"
                },
                "refundOperations": {
                    "items": {
                        "$ref": "#/definitions/HelloAsso.Api.V5.Models.Statistics.RefundOperationLightModel"
                    },
                    "xml": {
                        "name": "RefundOperationLightModel",
                        "wrapped": true
                    },
                    "type": "array"
                }
            },
            "xml": {
                "name": "ItemPayment"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Common.ResultsWithPaginationModelOfHelloAsso.Api.V5.Models.Statistics.Item": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/HelloAsso.Api.V5.Models.Statistics.Item"
                    },
                    "xml": {
                        "name": "Item",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "pagination": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Common.PaginationModel"
                }
            },
            "xml": {
                "name": "ResultsWithPaginationModel`1"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Statistics.Item": {
            "properties": {
                "order": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Statistics.OrderLight"
                },
                "payer": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Statistics.Payer"
                },
                "payments": {
                    "items": {
                        "$ref": "#/definitions/HelloAsso.Api.V5.Models.Statistics.ItemPayment"
                    },
                    "xml": {
                        "name": "ItemPayment",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "name": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Statistics.User"
                },
                "priceCategory": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.PriceCategory"
                },
                "minAmount": {
                    "type": "integer",
                    "format": "int32"
                },
                "discount": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Statistics.ItemDiscount"
                },
                "customFields": {
                    "items": {
                        "$ref": "#/definitions/HelloAsso.Api.V5.Models.Statistics.ItemCustomField"
                    },
                    "xml": {
                        "name": "ItemCustomField",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "options": {
                    "items": {
                        "$ref": "#/definitions/HelloAsso.Api.V5.Models.Statistics.ItemOption"
                    },
                    "xml": {
                        "name": "ItemOption",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "ticketUrl": {
                    "type": "string"
                },
                "qrCode": {
                    "type": "string"
                },
                "membershipCardUrl": {
                    "type": "string"
                },
                "dayOfLevy": {
                    "type": "integer",
                    "format": "int32"
                },
                "tierDescription": {
                    "type": "string"
                },
                "tierId": {
                    "type": "integer",
                    "format": "int32"
                },
                "comment": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.TierType"
                },
                "initialAmount": {
                    "type": "integer",
                    "format": "int32"
                },
                "state": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.ItemState"
                }
            },
            "xml": {
                "name": "Item"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Common.ResultsWithPaginationModelOfHelloAsso.Api.V5.Models.Statistics.Order": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/HelloAsso.Api.V5.Models.Statistics.Order"
                    },
                    "xml": {
                        "name": "Order",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "pagination": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Common.PaginationModel"
                }
            },
            "xml": {
                "name": "ResultsWithPaginationModel`1"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Statistics.Order": {
            "properties": {
                "payer": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Statistics.Payer"
                },
                "items": {
                    "items": {
                        "$ref": "#/definitions/HelloAsso.Api.V5.Models.Statistics.OrderItem"
                    },
                    "xml": {
                        "name": "OrderItem",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "payments": {
                    "items": {
                        "$ref": "#/definitions/HelloAsso.Api.V5.Models.Statistics.OrderPayment"
                    },
                    "xml": {
                        "name": "OrderPayment",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "amount": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Statistics.OrderAmountModel"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                },
                "formSlug": {
                    "type": "string"
                },
                "formType": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.FormType"
                },
                "organizationName": {
                    "type": "string"
                },
                "organizationSlug": {
                    "type": "string"
                },
                "organizationType": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.OrganizationType"
                },
                "organizationIsUnderColucheLaw": {
                    "type": "boolean"
                },
                "checkoutIntentId": {
                    "type": "integer",
                    "format": "int32"
                },
                "meta": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Common.MetaModel"
                }
            },
            "xml": {
                "name": "Order"
            },
            "type": "object"
        },
        "HelloAsso.Models.Enums.GlobalRole": {
            "type": "string",
            "enum": [
                "OrganizationAdmin",
                "FormAdmin"
            ]
        },
        "HelloAsso.Api.V5.Models.Organization.OrganizationModel": {
            "properties": {
                "isAuthenticated": {
                    "type": "boolean"
                },
                "banner": {
                    "type": "string"
                },
                "fiscalReceiptEligibility": {
                    "type": "boolean"
                },
                "fiscalReceiptIssuanceEnabled": {
                    "type": "boolean"
                },
                "type": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.OrganizationType"
                },
                "category": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "geolocation": {
                    "$ref": "#/definitions/HelloAsso.Models.Shared.GeoLocation"
                },
                "rnaNumber": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/HelloAsso.Models.Enums.GlobalRole"
                },
                "city": {
                    "type": "string"
                },
                "zipCode": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "updateDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "categoryJoId": {
                    "type": "integer",
                    "format": "int32"
                },
                "url": {
                    "type": "string"
                },
                "organizationSlug": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "OrganizationModel"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Accounts.Clients.PublicPutApiClientRequest": {
            "properties": {
                "domain": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "PublicPutApiClientRequest"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.ApiNotifications.ApiNotificationType": {
            "type": "string",
            "enum": [
                "Payment",
                "Order",
                "Form",
                "Organization"
            ]
        },
        "HelloAsso.Api.V5.Models.ApiNotifications.PostApiUrlNotificationBody": {
            "required": [
                "url"
            ],
            "properties": {
                "url": {
                    "type": "string"
                },
                "notificationType": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.ApiNotifications.ApiNotificationType"
                }
            },
            "xml": {
                "name": "PostApiUrlNotificationBody"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Partners.PartnerPublicModel": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "logoRectangle": {
                    "type": "string"
                },
                "apiClient": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Accounts.Clients.ApiClientModel"
                },
                "urlNotificationList": {
                    "items": {
                        "$ref": "#/definitions/HelloAsso.Api.V5.Models.ApiNotifications.ApiUrlNotificationModel"
                    },
                    "xml": {
                        "name": "ApiUrlNotificationModel",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "partnerStatistics": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.PartnerStatisticsModel"
                }
            },
            "xml": {
                "name": "PartnerPublicModel"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Accounts.Clients.ApiClientModel": {
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "string"
                },
                "secret": {
                    "readOnly": true,
                    "type": "string"
                },
                "partnerName": {
                    "readOnly": true,
                    "type": "string"
                },
                "privileges": {
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "domain": {
                    "readOnly": true,
                    "type": "string"
                }
            },
            "xml": {
                "name": "ApiClientModel"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.ApiNotifications.ApiUrlNotificationModel": {
            "properties": {
                "url": {
                    "type": "string"
                },
                "apiNotificationType": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.ApiNotifications.ApiNotificationType"
                }
            },
            "xml": {
                "name": "ApiUrlNotificationModel"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.PartnerStatisticsModel": {
            "properties": {
                "linkedOrganizationsCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "linkedOrganizationsCollectedAmount": {
                    "type": "integer",
                    "format": "int64"
                },
                "checkoutCollectedAmount": {
                    "type": "integer",
                    "format": "int64"
                },
                "organizationsUsingCheckout": {
                    "type": "integer",
                    "format": "int32"
                },
                "availableOrganizationsAccessTokenCount": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "xml": {
                "name": "PartnerStatisticsModel"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Common.ResultsWithPaginationModelOfHelloAsso.Api.V5.Models.Directory.PartnerOrganizationModel": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/HelloAsso.Api.V5.Models.Directory.PartnerOrganizationModel"
                    },
                    "xml": {
                        "name": "PartnerOrganizationModel",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "pagination": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Common.PaginationModel"
                }
            },
            "xml": {
                "name": "ResultsWithPaginationModel`1"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Directory.PartnerOrganizationModel": {
            "properties": {
                "organization": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Directory.DirectoryOrganizationPublicModel"
                },
                "availableAccessToken": {
                    "type": "boolean"
                }
            },
            "xml": {
                "name": "PartnerOrganizationModel"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Directory.DirectoryOrganizationPublicModel": {
            "properties": {
                "tags": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "linkedPartners": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "isAuthenticated": {
                    "type": "boolean"
                },
                "banner": {
                    "type": "string"
                },
                "fiscalReceiptEligibility": {
                    "type": "boolean"
                },
                "fiscalReceiptIssuanceEnabled": {
                    "type": "boolean"
                },
                "type": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.OrganizationType"
                },
                "category": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "geolocation": {
                    "$ref": "#/definitions/HelloAsso.Models.Shared.GeoLocation"
                },
                "rnaNumber": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/HelloAsso.Models.Enums.GlobalRole"
                },
                "city": {
                    "type": "string"
                },
                "zipCode": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "updateDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "categoryJoId": {
                    "type": "integer",
                    "format": "int32"
                },
                "url": {
                    "type": "string"
                },
                "organizationSlug": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "DirectoryOrganizationPublicModel"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Statistics.PaymentDetail": {
            "properties": {
                "order": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Statistics.OrderLight"
                },
                "payer": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Statistics.Payer"
                },
                "items": {
                    "items": {
                        "$ref": "#/definitions/HelloAsso.Api.V5.Models.Statistics.PaymentItem"
                    },
                    "xml": {
                        "name": "PaymentItem",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "cashOutDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "cashOutState": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.PaymentCashOutState"
                },
                "paymentReceiptUrl": {
                    "type": "string"
                },
                "fiscalReceiptUrl": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "amountTip": {
                    "type": "integer",
                    "format": "int32"
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                },
                "paymentMeans": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.PaymentMeans"
                },
                "installmentNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "state": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.PaymentState"
                },
                "type": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.PaymentType"
                },
                "meta": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Common.MetaModel"
                },
                "paymentOffLineMean": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.PaymentMeans"
                },
                "refundOperations": {
                    "items": {
                        "$ref": "#/definitions/HelloAsso.Api.V5.Models.Statistics.RefundOperationLightModel"
                    },
                    "xml": {
                        "name": "RefundOperationLightModel",
                        "wrapped": true
                    },
                    "type": "array"
                }
            },
            "xml": {
                "name": "PaymentDetail"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Statistics.PaymentItem": {
            "properties": {
                "shareAmount": {
                    "type": "integer",
                    "format": "int32"
                },
                "shareItemAmount": {
                    "type": "integer",
                    "format": "int32"
                },
                "shareOptionsAmount": {
                    "type": "integer",
                    "format": "int32"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.TierType"
                },
                "initialAmount": {
                    "type": "integer",
                    "format": "int32"
                },
                "state": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.ItemState"
                },
                "name": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "PaymentItem"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Common.ResultsWithPaginationModelOfHelloAsso.Api.V5.Models.Statistics.Payment": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/HelloAsso.Api.V5.Models.Statistics.Payment"
                    },
                    "xml": {
                        "name": "Payment",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "pagination": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Common.PaginationModel"
                }
            },
            "xml": {
                "name": "ResultsWithPaginationModel`1"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Statistics.Payment": {
            "properties": {
                "order": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Statistics.OrderLight"
                },
                "payer": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Statistics.Payer"
                },
                "items": {
                    "items": {
                        "$ref": "#/definitions/HelloAsso.Api.V5.Models.Statistics.PaymentItem"
                    },
                    "xml": {
                        "name": "PaymentItem",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "cashOutDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "cashOutState": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.PaymentCashOutState"
                },
                "paymentReceiptUrl": {
                    "type": "string"
                },
                "fiscalReceiptUrl": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "amountTip": {
                    "type": "integer",
                    "format": "int32"
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                },
                "paymentMeans": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.PaymentMeans"
                },
                "installmentNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "state": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.PaymentState"
                },
                "type": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.PaymentType"
                },
                "meta": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Common.MetaModel"
                },
                "paymentOffLineMean": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.PaymentMeans"
                },
                "refundOperations": {
                    "items": {
                        "$ref": "#/definitions/HelloAsso.Api.V5.Models.Statistics.RefundOperationLightModel"
                    },
                    "xml": {
                        "name": "RefundOperationLightModel",
                        "wrapped": true
                    },
                    "type": "array"
                }
            },
            "xml": {
                "name": "Payment"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Payment.RefundOperationModel": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "cancelOrder": {
                    "type": "boolean"
                },
                "creationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "state": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.OperationState"
                },
                "sendRefundMail": {
                    "type": "boolean"
                },
                "paymentId": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "xml": {
                "name": "RefundOperationModel"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Common.ResultsWithPaginationModelOfHelloAsso.Api.V5.Models.Payment.PublicPaymentModel": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/HelloAsso.Api.V5.Models.Payment.PublicPaymentModel"
                    },
                    "xml": {
                        "name": "PublicPaymentModel",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "pagination": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Common.PaginationModel"
                }
            },
            "xml": {
                "name": "ResultsWithPaginationModel`1"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Payment.PublicPaymentModel": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "organizationId": {
                    "type": "integer",
                    "format": "int32"
                },
                "formId": {
                    "type": "integer",
                    "format": "int32"
                },
                "formType": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.FormType"
                },
                "amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "meansPayment": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.PaymentMeans"
                },
                "cashOutState": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.PaymentCashOutState"
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                },
                "authorizationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "orderDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "orderId": {
                    "type": "integer",
                    "format": "int32"
                },
                "fiscalReceiptGenerated": {
                    "type": "boolean"
                },
                "payerFirstName": {
                    "type": "string"
                },
                "payerLastName": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.PaymentState"
                },
                "userId": {
                    "type": "integer",
                    "format": "int32"
                },
                "userFirstName": {
                    "type": "string"
                },
                "userLastName": {
                    "type": "string"
                },
                "userEmail": {
                    "type": "string"
                },
                "providerTitle": {
                    "type": "string"
                },
                "installmentNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "meta": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Common.MetaModel"
                },
                "refundOperations": {
                    "items": {
                        "$ref": "#/definitions/HelloAsso.Api.V5.Models.Statistics.RefundOperationLightModel"
                    },
                    "xml": {
                        "name": "RefundOperationLightModel",
                        "wrapped": true
                    },
                    "type": "array"
                }
            },
            "xml": {
                "name": "PublicPaymentModel"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Enums.TagType": {
            "type": "string",
            "enum": [
                "Explore",
                "Internal"
            ]
        },
        "HelloAsso.Api.V5.Models.Tags.InternalTagModel": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "formCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "organizationCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "tagType": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Enums.TagType"
                },
                "tagParent": {
                    "$ref": "#/definitions/HelloAsso.Api.V5.Models.Tags.InternalTagModel"
                },
                "amountCollected": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "xml": {
                "name": "InternalTagModel"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Organization.OrganizationLightModel": {
            "properties": {
                "logo": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/HelloAsso.Models.Enums.GlobalRole"
                },
                "city": {
                    "type": "string"
                },
                "zipCode": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "updateDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "categoryJoId": {
                    "type": "integer",
                    "format": "int32"
                },
                "url": {
                    "type": "string"
                },
                "organizationSlug": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "OrganizationLightModel"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Account.OrganismCategoryModel": {
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                },
                "label": {
                    "readOnly": true,
                    "type": "string"
                },
                "shortLabel": {
                    "readOnly": true,
                    "type": "string"
                }
            },
            "xml": {
                "name": "OrganismCategoryModel"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Tags.PublicTagModel": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "score": {
                    "type": "number",
                    "format": "double"
                }
            },
            "xml": {
                "name": "PublicTagModel"
            },
            "type": "object"
        },
        "HelloAsso.Api.V5.Models.Account.CompanyLegalStatusModel": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "label": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "CompanyLegalStatusModel"
            },
            "type": "object"
        }
    },
    "securityDefinitions": {
        "Client": {
            "type": "oauth2",
            "flow": "application",
            "tokenUrl": "https://api.helloasso.com/oauth2/token",
            "scopes": {}
        }
    },
    "tags": [
        {
            "name": "Checkout intents management"
        },
        {
            "name": "Directory",
            "description": "Directory Controller"
        },
        {
            "name": "Forms"
        },
        {
            "name": "Orders - Items"
        },
        {
            "name": "Organization legal informations"
        },
        {
            "name": "Organization visualisation"
        },
        {
            "name": "Partner management"
        },
        {
            "name": "Payments management"
        },
        {
            "name": "Tags"
        },
        {
            "name": "Users"
        },
        {
            "name": "Values definitions"
        }
    ]
}